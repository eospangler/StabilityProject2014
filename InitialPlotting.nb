(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    332459,       6798]
NotebookOptionsPosition[    328945,       6696]
NotebookOutlinePosition[    329304,       6712]
CellTagsIndexPosition[    329261,       6709]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6694738812008753`*^9, 3.66947390283029*^9}, {
  3.670020010234455*^9, 3.670020017652039*^9}, {3.6700203239755383`*^9, 
  3.6700203350170107`*^9}, {3.672305267915553*^9, 3.672305275056994*^9}, {
  3.672305471271903*^9, 3.6723054929129*^9}, {3.672305535075715*^9, 
  3.672305570086248*^9}, {3.6723056425281277`*^9, 3.672305649963022*^9}}],

Cell[BoxData["\<\"/Users/ethanspangler/StabilityProject\"\>"], "Output",
 CellChangeTimes->{3.6778571895057983`*^9, 3.683500554664917*^9, 
  3.6856448977225323`*^9, 3.691523352883939*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\</Users/ethanspangler/StabilityProject\>\""], "Input",
 CellChangeTimes->{3.674388776044063*^9}],

Cell[BoxData["\<\"/Users/ethanspangler/StabilityProject\"\>"], "Output",
 CellChangeTimes->{3.674388776134223*^9, 3.683500556772478*^9, 
  3.685644900782364*^9}]
}, Open  ]],

Cell["\<\
Plots of Freedonia, Merika, and Kleptopia for low initial dissent. \
\>", "Text",
 CellChangeTimes->{{3.669474834358407*^9, 3.669474865621138*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Freedonia", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedonia.mx\>\"", "]"}], " ", "//", " ", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Merika", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerika.mx\>\"", "]"}], " ", "//", " ", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kleptopia", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopia.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cathay", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathay.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rentistan", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistan.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Develpolus", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolus.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bellicostia", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostia.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hippieberg", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippieberg.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.669473877303152*^9, 3.669473879662216*^9}, {
   3.6694743359012747`*^9, 3.6694743425708933`*^9}, {3.66947470480116*^9, 
   3.6694747521406317`*^9}, {3.669475244075739*^9, 3.6694752466656923`*^9}, 
   3.670020006637568*^9, {3.672304257017521*^9, 3.672304262013875*^9}, {
   3.6724978539308367`*^9, 3.672497944641344*^9}}],

Cell["New lines to convert Scientific form to plotable form:", "Text",
 CellChangeTimes->{{3.672304276459331*^9, 3.6723042933312883`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Freedonia", " ", "=", " ", 
   RowBox[{"Freedonia", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Merika", " ", "=", " ", 
   RowBox[{"Merika", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kleptopia", " ", "=", " ", 
   RowBox[{"Kleptopia", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cathay", "=", " ", 
   RowBox[{"Cathay", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rentistan", "=", " ", 
   RowBox[{"Rentistan", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Develpolus", "=", " ", 
   RowBox[{"Develpolus", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bellicostia", "=", " ", 
   RowBox[{"Bellicostia", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hippieberg", "=", " ", 
   RowBox[{"Hippieberg", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.672304298834947*^9, 3.6723043437724*^9}, {
  3.672497965034464*^9, 3.67249805519978*^9}, {3.672498623756978*^9, 
  3.672498635234902*^9}, {3.672507406079191*^9, 3.672507417340949*^9}, {
  3.674388852711625*^9, 3.6743888593096857`*^9}}],

Cell["\<\
The plots are a little two close together. I\[CloseCurlyQuote]m going to have \
to break them up for clarity. I\[CloseCurlyQuote]m thinking 3 different \
plots. \
\>", "Text",
 CellChangeTimes->{{3.683500585408207*^9, 3.683500619773246*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Freedonia", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      RowBox[{
       RowBox[{"Merika", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cathay", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Rentistan", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Develpolus", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Bellicostia", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Hippieberg", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
      "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\"", 
       ","}], "*)"}], 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{"Green", ",", "Blue", ",", "Pink", ","}], "*)"}], 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Stability with low initial dissent\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalLambda]\), \(t\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/WGj+JzYmNeO8usjFoDoA0svbgXRHJc99oHox791
DoHon+uNwXRnwIzG3UD63uMfTSD69OelgnuAdMq9NB0QfYKTxQRET3r1DUw/
mZeyF0RfKso5AqJPRT9vOwCkd4nHdYDoTUKxfSCa5UfpNBDde3HxLBC9yjNl
DoiO8k05eQhIOy38ehpEG+w8/RBEe2mmfADRczg9DL4A6YZ3SUYgOjJ+w4zw
BKD7DQ7MAtG31Y7s/JL22vH8lJpdIJrlY2jKjkKgOS0tqSD6rZtWHYjOevC7
BUSHHcnoBNEC/qe7QLTMt+oJINom7zCYjqsXnQGi/052mwWiLbnuXAHRyzpX
XQXRv7+n3gPR/+TmPwTRAJ5YxG4=
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs/dt5Hto5FTp2C7UVcSO1FXfgErRR
kD4f6henLm/89a3THUjS/Tm9+/f7avX+H5/v7b+Hpt+DeAgP4xE8isfwBJ7E
U3gaz+BZPIfn8QJexEt4Ga/gVbyG1/EG3sRbeBvv4F3cwk2/C06bjrNHx9mn
4xzQcQ7pOEd0nGM6zgkd55SOc0bHOafjXNBxLuk4V3ScazrOTb8bXHDFuWWP
C644Hfa44Ipzxx4XXHHu2eOCK84De1xwxXlkjwuuOE/sccEV55k9LrjivLD/
9zdy4T7R
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs/dt5Hto5FTp2CxUIbqt24TZcgjYK
0udD/eLU5Y2/vnW6A0m6P6d3/35frd7//fOj/ffQ9HsQD+FhPIJH8RiewJN4
Ck/jGTyL5/A8XsCLeAkv4xW8itfwOt7Am3gLb+MdvItbuOl3wWnTcfboOPt0
nAM6ziEd54iOc0zHOaHjnNJxzug453ScCzrOJR3nio5zTce56XeDC644t+xx
wRWnwx4XXHHu2OOCK849e1xwxXlgjwuuOI/sccEV54k9LrjiPLPHBVecF/b/
/gaB3iRi
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJxN1H9Q03Ucx/HlgbdCL8VheSIpIK3UkWKEBu41HD/mBPfjux8S2YlOzqIA
lY6ZwSBBCEI9ZaCcx2qAkE4uro7yB4I/4jzJH1eectZFGEeXl0w69keFlPV9
9/7ubtt99rjnvp99Pp99F+XkmxzTZDKZ45/n4/f/Hn7149fEsQqN+AFiZ0/c
UA1dEsdyjBw/WbysiHwWFL9dHox76pQ4VkDx190m9mdR//v0WDjIw+H8s/Q4
+0JUZ0+uLN1KHon7n01Vs0ejr91t7ZpHHgP93JxT7Eqoun2d76jJX0SR+ugR
9qXw1Aiec0+SqxA0PE9y/Zew+k2Y+xTkyzGqeO4j9hWoKgsJVJrJ46D3+1rY
VyJs9rUrXSbyl3EyNamEPR6RGXcuTcSTv4K82/Jy9gQkfTjYc/GRTxyvgk/V
4mVfje69Z8uHoqh/FYHu5g72RJR6whydEeRJ2OX8Zg/7GgwOGOf8GkquRtD3
Qj070FSan69MEN0FjLqqdrNrcNOZ2ldE83Np8LPztKRPRsituKuaQuqTceje
A8n6r0Vr9sdRFh35WrgLaw6za1Eck7BZWEquxeJrQ23sKejImwiV++n6KUjf
deYseyquX39YUJlFfSpC6j6vZU/DtK7Q5OEfqU/DlnNpkv1Lx9TDkpFm2n9X
Oi4fqetn12GyR7v4jffIdRj7clIyv3XIUuq12cnk65A7433J+uihf+1bvfMZ
cj3yMKOVfT1yInzVwf/7enxXnv4FewY269FkSCTPQM7cwAH2TJw3tF30vUCe
ifAljT3sG5AycL5JDvINcIw/kJx/A1SNceb5IaLDAG/YV3z+XQYMCZbc9hFx
/XoNuHBDtZd7I+pXdEeo36LeiNjX/Tx/lxGdnbVjyxaJ3mtExbveg9ybUHui
pNU2Ln4/TGjO9FZwb8Ixb8XTg8HUm7Bv5hOS9TNDFRW9I2mYejO2uLfz/8dl
xprlgU9kFurN0B1DFfcC+suyyuL/oF6AJnePm3sBdxf80OKPpF5AdcMhSW+B
Y2r3eNp8+v0WPL8z/Cj3FgSCxjd5Z1FvwS8f7JfM34r40wveHlBSb0VoWLCH
eyvOjBV93R9NvRUL5TrJ+bPBLatp8ND+woaY9mF2lw2FWuXBT+l89tpQOTO2
kXs7ftrmtdwqoN6OLt2SOu7tEC5s2tFB56/Xjun3iyX3x414ZB890Ub7g41o
KLj37/n8G58Sus8=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        LineBox[CompressedData["
1:eJxNlGtIk2EYhr88TFuHeUodW2gqZQdiuTStpfech83pzueyH1H4w0jSqCCC
F5MIJCE7SAX+kRJCJIgOSNAn1J+kpPbD0ihIDDItgyJmOEuUdg+2j2v3+zzP
+zzv/b2bDre4jsZJknTk33fpufyZq1j6FR0248ofqAhMjvWnuVc4GbNG3cfR
/5yCtvv6hRhnoOPAUDTG2cgJR4m1aHurXoxxLga+pBPn4asmnrgAIUlFvBk9
YeZCdP7ifNsQOpdNvAP2UV6/E672NGIdxrZoiHfBZksgLoL58RztX49xKY70
3fh8TEFcjGDXAq0vgSL4g3gPIgVraX0pRvPXE5cBqzcQ78XpoSzifcjt5ngD
9HeVxPuhUnN/5Ugs5P4rkFPC9QCFg/oXwMvURNKNMJZSPmHEyDOJ9EoM6zNI
r0SrLpl0E7Z+WEO6Cbcecv0qhK7RvEQVppXsl2rcMLBejevHV1F8Dc6e30j5
a/A6PZX0Whiu0jxFLeJP5pBuhjqP5iPMOKRMIt2C0B3Ob4HmEp9/HbKKIrS/
Omia+PyseHKC6gkrHhRnkl6P2dvkH1GPrJvcXwNmBsjPogGR5nmajw1FF2ne
wobuQd6fHSOfaJ7CDtU79osDKVN0PnBg3kL+Fw5YLXResgOTz3m+TkjfaD2c
8B1cpHpO6Eu/x1h2Yvsg+9OF/Pcc70Kn5Q/FuyB+0/xkF9ofsX/cWNevpXg3
TvXS/SHcuDxF/cpuLDTz+XrQ15hC8R7cy6T8wgNtF+myB43TPH8vJibIn/Di
VRLNR3ih7KX+ZC/KotSf5EPLML3f8KGnnN83HxJmyB+yD6rgT4r3o+kM7Qd+
mF6wn/wIt9J9IftxQcH3bQDOca4fwNNa9lsATW+I5QD6rvB9FIS1etl/fwFp
mbQT
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 101.}, {0, 7.004727379145869*^8}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[CapitalLambda]\\), \\(t\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 101.}, {0, 7.004727379145869*^8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Rentistan\"", "\"Develpolus\"", "\"Bellicostia\"", "\"Hippieberg\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6724997298319263`*^9, 3.672499749120961*^9}, 
   3.672507432928594*^9, 3.672507575739408*^9, {3.672507611946907*^9, 
   3.672507621380797*^9}, 3.672512158538516*^9, {3.672512308084381*^9, 
   3.672512388040049*^9}, 3.672599041108983*^9, 3.672613276821353*^9, 
   3.672614824171459*^9, 3.6743888061772747`*^9, 3.6743888706299543`*^9, {
   3.674389707453664*^9, 3.6743897225626574`*^9}, 3.677857255446015*^9, 
   3.683500571269102*^9, 3.683500850504212*^9, {3.683501073458061*^9, 
   3.6835010983205347`*^9}, 3.683501147332859*^9, 3.683501192183519*^9, {
   3.683501254531419*^9, 3.683501268512741*^9}, 3.6835017441556*^9, {
   3.683501817611183*^9, 3.6835018407136803`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Freedonia", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     RowBox[{
      RowBox[{"Merika", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cathay", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rentistan", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Develpolus", "[", 
        RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Bellicostia", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Hippieberg", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "*)"}], "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\""}], 
     RowBox[{"(*", 
      RowBox[{
      ",", "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
       "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "*)"}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", ",", "Pink"}], 
     RowBox[{"(*", 
      RowBox[{",", "Orange", ",", "Purple", ",", "Magenta", ",", "Brown"}], 
      "*)"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Stability with low initial dissent\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalLambda]\), \(t\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683500795950177*^9, 3.683500806660405*^9}, {
   3.6835008724928226`*^9, 3.6835009072196903`*^9}, {3.683501751697473*^9, 
   3.683501755384822*^9}, 3.683501856406699*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxNlHtMjWEcx1u5llFp1pRIzRK6Uqno20X3U+d+TkvRWS5/5Fao4eSVLi7V
odas1dqpcQqhsZFmHCaWWBsbI1LWNCVRuSW3xs63d3vfd9/383x+z/s8z/s+
zpod0k3mZmZm6X/Pifu/42PIxDUzpSj0/wNscVibfaRJ+J9nwNWqtnC/KVtD
GhRYpzVlO8Sn3EpitkdXzbgtsyPaj1QGMy9CvGFs9IApL8ZIbmgOuSvOVzd/
Il+C2pyLBnI3HHAW+TC7o2Mg3Jd5OY6PVi1j9oCnZWkNsxf8Ox63s743lPq5
VuQ+KLDtbSD3xYrEvivkK7EzIbOefBV+pM/RkPvBvf2iK7M/vme2vWf7ALyx
n7OZfDUOfrOLYA5Ep/PvX2wfhJWaZ7PJgxGUdCmSeQ2idI6ZzGvxxaa/lDkE
dxTWBtYDLkzfH2DiAjDktLufPBR92S2cfyEU17c+92O9MLjk9FrSD0P3zXJH
8nDcMNo10w9HyPyY0+QROJq1muMTIvBIbtSTr8PQwM901l+Hir3mavJINLam
fqMfiVGPKZPWOwpOOhsX+lHQDSd3cnzROLvvq4g8GiHFvk/JY2A4MTONPAa/
83fvY/1YTFsR1sP+YyG83sX5NIvDq+ANs+jHYUxfpiCPh8PRiqXk8fiZX72V
XASLmO+ryEXIzX9YQp4A84yCAvIELFAMT/rfEiHN0K8hT4TktugFxyeGxamG
qSYOMXSVl4vYXozy+t7PpvZGMQqz82xYX4Lksm383yFBrXfPOfoSJC7Uc72M
Eui0jTL6UqR2u7A+pNDu3cP1E6S422/woi9Fc5n/pO9fhkMdp8H+ZXjglsd6
ggy+DVZa+jLc79JoOX45PFsfiOnLkdZszf4EObbX2XC/MsrRFnawhb4CsU0v
59FXYODr22T6Cqg+nAzm/ClQpInM4vsrsbH4mAN9JdaPpTXSV+LaYNNV+kpk
PekbZ/8qxHrXXeL8qbC0xJb7h6DC68MWqXx/FV6NyCbtR2okdzkM0lcj/F3n
PfpqVOWWRtFXQ3LesIh+EkrPbPCcyH8A2srStg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxNlHlI02EYx1caHZJZaVpW3s7KxLPM6fw6dR6zdh/RpZKIFSoVWQ3qJTuF
LDBQsDIpoQNCorAic0RF4EUlSKR/JIUolV1eGZqR7PsbbOOzL5/3fd7nfX4L
yC8xFMyWyWS7p9//vv+/viVPfwhTVFXKzA8IqY/VHWu8OMPz8Eb5tuKwkz1w
N6aj6IiTPbHO+v4zcx+8cs9PZr4SB3+7hJD90bpjZxI5EAnVlmH6wYitVAyS
Q5ExLvXDcEKrjiavBTSngsnhmBr9spAcAc3A5bnkSFS1Fm0gR8G+ryORHI1K
s5DUE4OyD8Zw5rFA0HF/chyKk4cXkDdAkWWNIG+EZrBGwvFQ1yi9yJswEmFV
kBNwO6ZMsr4CwZFNnuREdMtyx1hfEjyay3+SlQgdt/whJ2NjaWcfGSgIT5jt
XE8Azys6JfulIP/8lDfzFBx2LYpjroLfodYp53pChQ9xkxrmqZArRubTT4W+
r2E18zQMmbLUzNOwt2apC/N0DHj58T5FOmrdVEHM1VhRXsn7FGqc3uMmuZ8M
LFlnZ39EBua2KwOZZ+Llr+WS82Xijqxf0v8sdJ1TsX8iCy2nP85ino3mvN88
j8jGrmq5O3MNUrclZjDXoKQ8f5z9z4H81lfOp8hBY3F9KP3N6JLfGOL+m9Hb
lreG+RZ4945wHsQW+Bp6eB8yLVrOnN3EXIumF+8k9eug7hZhToYO4yYt51fo
cODSAvbXoYM84d5S+nq41d6X+HpMNU3I6evhd8EYT1+Pk8rtFvoGFD3OXkTf
gIIwG+9fGGBv/7SYvgGmMptk/o2Y1+fhSt+I2iVPo+gbca3xNefdYcTCM/Zc
+ibssz8YdeYw4Xrb0QD60/yzUHJ+E/pXlS6jb4Zn00pJ/Wb0iFV8PoQZvicK
feibcVXuKnneLbjZ8IzzCAsCT41J9rdA+ziA8+KwoK6zX/L/ZcVEziTnHVZo
7HFkYUV53UP202FF6IFgFX0busL3cx5gw49HV3T0bRh8sp71Omz49X3HHPpb
UZJa6PuP/wLKz78P
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5]], 
        LineBox[CompressedData["
1:eJxN1H9MlHUcB/C7Gyp5uEy88SOWwJxaknFoBxHGG45fwnHw3G8mLiSBHZS/
JmDp7DAIhENwkIVNrUWEqICIgPx82mlTC7BbzMZqbJV5mX84RtkyLar78Hme
7XmePc9r7+f5fr7P5/uE5e8yFChkMlnB/P7v+f/tfvz8wdF/870E7w2YNc1D
+VaX99oXWWWyhohS8uV4LaKsedOxbu/1SjjntnezB+J+Q4OhroU8BLOPhRH2
UKxaE+hz+BB5OGK3Tvaxr0bJVIwtqpR8DVKXudrZ16H/s8hCt5P8OQSHlg6z
R2BFVUHApePkG7Bt1Qu97JEoUp5+/tNacjUqWhLPsUdhddPvSzoOkm9Eol4r
Gd8mFO19oFQfIH8Ry7+0t7FrkOrTq/6uhDwamWM+V9ljEFo5/Eve2+QvYUlA
icgei+LwpqGBZvKXEbxUOc4eh6MRFY199eSbcWSyYYz9Ffy6L7zwzEJ98dg6
Oj3ADty2dXpc73vdAVj1hlvsCZi+t9ZT/AF5Aj4qmjnNnohHbpVzwk6eiL47
315i1yLt9ldJe/aSaxEoPyAZXxLc9Q99n3iXPAny9r8l85sMoby98ZqDPBlH
TIsvs6cgrHt7yH76vo4UOF19LvZUBK3r6XiyhjwVMd9oJPOfBt+c655DheRp
uGG4Msq+BZ7u8b8eUn85tkC+TDPIng7FGwFjeQvPT8dcW9sQewb+UD61Q3mU
PAMK+w832XUYUaz1q1yoX4eTH2s72DPxs2Fg0eSr5JmI7jFK+lcPbc2Y/VYZ
uR6K8x+eZc/C4OjUDb93yLOw8bgg6e9sOLbt1nxf6XVkY/rpSq7fkY2u8fhR
VafXxWz8ueGnU5wXkNyrtkfS/EDAmeGDFzkvYGXtj3NT1B+iAHXK4OecN6B4
Nig3vZHyBpyrzr3C+Xkfmdl/gvpTNEDwvyZZ30Y8qp2s8l94vxG6uLv9nDdi
V5dTV91EeSOWOmq+4LwJfuag1sXVlDeh65l7kvpNODy3RzdILpqgS3Ze4LwZ
s/U2fxf1H8y4Lm/p4bwZCiHn7h36P4hmTLTGcn0yC1R1LeoQ+j6woGLHVcn4
LciNai3fTOtftCD6t0/4+TIrvu58rMqj+YEVorx8ivNWZNSt32mi/4tohWr3
Tsn4bZiIOxX27FuUt8Gtq+L15bBBv+jysTf3Ud4Gz8zr5zmfA//g/AdhJymf
A7fF9d/6/QfzMMGU
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 101.}, {0, 6.489880231579081*^8}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[CapitalLambda]\\), \\(t\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 101.}, {0, 6.489880231579081*^8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Freedonia\"", "\"Merika\"", "\"Cathay\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6835008091849747`*^9, 3.683500909377488*^9, 
  3.683501768063846*^9, 3.68350186957303*^9}]
}, Open  ]],

Cell["The last plot, just Kleptopia  ", "Text",
 CellChangeTimes->{{3.683500660225834*^9, 3.683500666505385*^9}, {
  3.683500700525214*^9, 3.683500707948565*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Kleptopia", "[", 
      RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], " ", "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Stability with low initial dissent\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalLambda]\), \(t\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683500715312127*^9, 3.683500777071415*^9}, {
   3.6835017596099577`*^9, 3.683501762656201*^9}, 3.6835018635095797`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw9lA9Qk3UchxfYTc2CNJMoLwgjg1JEEFH+fED+DMYGeze2AXeaBgSnFwkE
+I/eQK52hCkMEQ1oIEOClUJcco1g7BhI0cKwkDshFHEIQhGEHIHZyffd3bZ7
9txz737v7/t7HQ+kMAlWPB4v/vH7/+8nrz/9H3+842d7OWD5B2hnGhr7X1zb
/gRXovDIzSzzhlXLbAuvs70fxkYSvwCPoQwn9RixHd7X7NsZnkH8CvzXPB+0
ppXYAeu1F9S2ScSvIeSRS8/2POJNcBga3Wj/C7EzTnqU2iVcJN6Mo4lZi0/V
ELtg8pg4Ut5N/BbK0tZqL0uIt2A+Kdktvo7YDSmuJaPuGuJtSP2yvmvzB8Tu
yH4u37aAW892TLH9igEjsQd8WFeNfT6xJ4oZ8TZhMvEOlPBY7cBNYi+Uxaq/
lVYS78RcVenKN84Re+NH4/r8pevEu1CR8a93SwXxbtz3LD/KmIl94PRwf8FC
C7EvPo4XXLHh1u+H+PShE8WZxP4wNMzdrdcRA47mUf7WxGVmgYh4lc7lK/IB
4FvV+o5WkQ/AjY3i7kbu/wRi3ti36+oQ+UBYMgNz7L8gvwfXR2IDL9F+sXsg
yC5bzeskHwTd7DX9J9nkgxB+20FdeYt8MPh1uWK7EvLBiKo6+9fgN+RDsK7z
VNpkPfkQMHlFzFQt+VAcvOa3VP4R+VCsqDAVLRSTFyCuZvx4F7c+AWQykbLn
Cvkw+HSkW68wkQ/DrZnfa+e5/QrHeNd793uJ2XAUVAsHhNXkheDVnsut+568
EDa22h9e5+Y/AsP6BGuzgXwENGlNOR2N5EU4ZFO4ZYTmmxUhb0F3+N5P5MWo
6WND9XS+WDFaY8+Xp3PzHYnWTMbg1E8+Ev+8GmyRcvsXhYkUIb+XGFFY0Nw5
tI+7XhTe1aSe2f31MrdFQT2d6CtSUS9BzOLEyEss9RKIwnjNe4epl8D72U81
diPUS1AYbGXpSaWewZkkfVbpEeoZrGOZ48Nd1DPQNc2arETUM+iMudqdar16
uZfCXDT9650c6qVQtg9OmH6mXoo3GVf7z2je26QYtW4a8+KeJzIIEgK9VYPU
y2D+XP/3wEHqZfC8YFI9ovvdJsOBu27lO25TH40W38awRQv10dhbIS841kR9
NJxNub/1NVMfjbcnOy5OqamXw7i0/2VnOp+QQ+I24zlWSr0cm1wuGfk0n21y
PHPSfm4D3R+eAk/H3RhPp/MFBQ4/OF9W+R31Chgk6hOT7dQrwE/V/xE0Tb0S
cd4PLdV03qHEmJuT+9bT1CuRMW7RP2igXonTBtU9R+75FIPk9tnm0FOr2v8D
PzLeAQ==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 100.}, {-1.9423177964738914`*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[CapitalLambda]\\), \\(t\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100.}, {-1.9423177964738914`*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kleptopia\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6835007617434177`*^9, 3.683500779137941*^9}, 
   3.683501764924911*^9, 3.683501865467749*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Initial Plotting with a R shock, ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.67261290821944*^9, 3.672612918550116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaRSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedoniaRSHOCK.mx\>\"", "]"}], " ", "//",
     " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaRSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerikaRSHOCK.mx\>\"", "]"}], " ", "//", 
    " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopiaRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathayRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistanRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolusRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostiaRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergRSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippiebergRSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672612980421198*^9, 3.6726130142136717`*^9}, 
   3.672613550264583*^9, 3.672613614814622*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FreedoniaRSHOCK", " ", "=", " ", 
  RowBox[{"FreedoniaRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"MerikaRSHOCK", " ", "=", " ", 
  RowBox[{"MerikaRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"KleptopiaRSHOCK", " ", "=", " ", 
  RowBox[{"KleptopiaRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"CathayRSHOCK", "=", " ", 
  RowBox[{"CathayRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"RentistanRSHOCK", "=", " ", 
  RowBox[{"RentistanRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"DevelpolusRSHOCK", "=", " ", 
  RowBox[{"DevelpolusRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"BellicostiaRSHOCK", "=", " ", 
  RowBox[{"BellicostiaRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"HippiebergRSHOCK", "=", " ", 
  RowBox[{"HippiebergRSHOCK", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}]}], "Input",
 CellChangeTimes->{{3.6726130541249313`*^9, 3.672613096427991*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,47,1,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523659130082*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,47,2,21370627736111556251,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523659215138*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.6915236592572517`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,48,3,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523659366878*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,48,4,21370627736111556251,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6915236594197083`*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523659429974*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,49,5,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6915236595343313`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,49,6,21370627736111556251,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6915236595865803`*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.69152365959726*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,50,7,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69152365970129*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,50,8,21370627736111556251,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523659755265*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523659765883*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,51,9,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69152365986976*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,51,10,21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523659920979*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523659930105*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,52,11,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523660035162*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,52,12,21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523660089402*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523660098049*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,53,13,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69152366020337*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,53,14,21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523660255851*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523660265189*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,54,15,21370627736111556251,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523660349708*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,54,16,21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523660368647*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.6915236514177217`*^9, 3.691523660379242*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FreedoniaRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     RowBox[{
      RowBox[{"MerikaRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{
        RowBox[{"KleptopiaRSHOCK", "[", 
         RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}]}], "*)"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CathayRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RentistanRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DevelpolusRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BellicostiaRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"HippiebergRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "*)"}], "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", 
      RowBox[{"(*", 
       RowBox[{"\"\<Kleptopia\>\"", ","}], "*)"}], "\"\<Cathay\>\"", ",", 
      "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", 
      RowBox[{"(*", 
       RowBox[{",", "Red"}], "*)"}], ",", "Pink"}], 
     RowBox[{"(*", 
      RowBox[{
      ",", "Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
      "*)"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with R shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"FreedoniaRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      RowBox[{
       RowBox[{"MerikaRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
      RowBox[{
       RowBox[{"KleptopiaRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CathayRSHOCK", "[", 
        RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RentistanRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DevelpolusRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BellicostiaRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HippiebergRSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
      "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Kleptopia\>\"", 
       ",", "\"\<Cathay\>\"", ","}], "*)"}], 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{"Green", ",", "Blue", ",", "Red", ",", "Pink", ","}], "*)"}], 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with R shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KleptopiaRSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with R shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672613118310802*^9, 3.672613150860641*^9}, {
  3.672613523713516*^9, 3.672613529351377*^9}, {3.685812603065569*^9, 
  3.685812610261198*^9}, {3.685812972320013*^9, 3.685813033183546*^9}, {
  3.6915236443139687`*^9, 3.69152364603238*^9}, {3.6915241539322433`*^9, 
  3.691524167341424*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxNkn1MzHEcx08eujYPodmlTColF5eu53DvKz1cXQ/32GHZWNfaNK0TSR7O
KPFfhugPYWI2teRpGboTzdMYosmSQvxBWBnzXJPv+267u73u9X1/39/P93dz
1hTprW4SiSRv+D3y/e/1STXyacvdrR79AaVTDJ1VTfZRlmJrtS2jXLAnHAVy
x1bBXuiY+2Y+WYay/WEysi92DlpzyX640hsZRPZHRcOcWeRAKPzGuKwPwutJ
IY3keRiMW1G8RfB8aD19W+hDEdxT8oF+ITw277HRh8GrsDmavAhNnzaf4/pw
fN9YU09W4nffRS3XR6Cu8880ciTc2++pyFGQfrksJUfjtMw9jhyDUw2PdORY
vL3fG0qOw+yKyavI8Rh4FVlBXoxNTzok5CU4rpa63PdSJHTYrWQVAgPCd5KB
eM23XjGffZiTc4/Qq3H411t3wXY1Dvya6TJvAgxJx430CRicPPCN95WIHxOm
l9Inwt/8MIr5ZfApT/SjXwa526urzCfhqcezLp4vCUVFQ5nMJ8PnWrKS+WQE
FJxweZ4pcLZmfGQ+BSWl3dX0qYjtS1Awn4rGD5oO9mvwOermTHoN1u77Ed4q
LRv1aSiut5bf+M/2NFiDFZVtwqejKt9/h2B7OqLKGmbRazF3xce868JrUR8T
Fk2fgUlWhZL5DMR5l8noM7Hu2oCKPhOBTRv6ncJnwdsw9JP7Z6HkUMhzwZJs
hI9J6haMbJwMyRvLebKRNsO3ReznyMbZfJ9c4SU6WGTV7aIfwzyheTvPo4Ov
VrVN7O/Q4Vh9XQDzehQcLG5mvx5f+48qmNfDeGvVdrHeoUdbe0wb5zcgNki+
kXkDXq4v1zFvgNfqykjBDgPcX9jSmTfi0LsTqTy/Eek3HkQwb8SlSqeJeSPG
n1lXy7wJhYjpEeeDCXf3Pp7K+zYhL8DzPec3od/Ww+chMcP7zoVd7Ddj5e1d
C5k3o6pzihv7zeiqiVjL/hx8iX+i5vw5kL+oUd4U+Rycj5AvYH8OxtU2u/w/
LFA6gzaw3wLNkIeT/RZMTKk2s98C71qfpexfjrpjhY9G+C98166k
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxNkn0s1HEcx6+kBzdFRA1zpCdJrifRgzfijkN35+4w1SimtUWyJhr9th5V
oyblDy0bSa0HPawiyxn/MNrogfWoB52ebYRVFEu/9912d3vd6/v6fj+/3+/c
tqZpkydKJJKk0ffY979Xb8Doh6CTFwaO/wDFuadVuVUnx3kqlsptDXtFtoFU
IUvPEtkenz6P+JNno7vZuofrndHlXrOaXoYzptAhenfE5w9Y03uguzzCmTwf
1xWlnuSF2HIqV032xExlywfu54Vg/2mL6L0hHUx6Q++D1j91i+nlqHG9Z7Z+
GZ63tvVz/XI0DKfY0q9A6PerUvJKSPNq55JXoXRyitn+vpD3F1mRV2NgvnwJ
2Q+mvvtysj8+tV10JK9BdeqDKeS1kL7KCSGvg33NNzvyeiQ7+vuSA3D8N8z2
A9otHvuILACpCxrN5gvEpIeBvP9CIOqds73pg5DprrKhD4Jitm6E9ysYyZ81
JpGFYMSXRSxgvwEdZze5sN8Ag1fBb/YhsGl6aeZDYHd8aB77UKx57cr/kxCK
zQ6PzJ6XAs3VDrwfggI/Plp/pVciYSRBRa9EanZGJ30Y6iuKOK8Qhsqujid3
puaN+3DILl1qqv7PQjiUGe9y74lehRM3L6jpVUjUu5XRR6B4SbGCPgJf4hzn
iCyJRMsthUlcL0Qi33iqgn0UjFkpP+mjsGlXpgP7jWi86NpLP8qTs26wV8ND
td1XXA81lE5XqrhejffJLp6iN6rhJbM4z14D7xV1lSJDA7+HGafZa+BUmaNl
r0HitZLFnE+LF2d6B9lrIck6+pW9Fh/i0iaw1yLhmOcAz4+GkL2/gH00+q32
lLCPxjuLne9FNkajsGffA/Y69F2+e5DXr4O+s8+Sz0OHq0lHatnrILte4Mb5
9bBcm3CX5+ux+zDs2OuRP70tnb0e2289MzvfgIWOW26zN+Dwr4Zt7A3o6fGQ
8foNqIw6cJB9DCTDLbM4/yjXXbFiH4PGtJq57GNwYsehdvaxyC6KfMvzY1Hb
YuXOPhYzTOXc3xiLjuHvnFcSh6GcQs2Y/wtCNr3U
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5]], 
        LineBox[CompressedData["
1:eJxN0n9Q03Ucx/Ed/jilEFEywImA/PBokY6JIqu9BkwHG7J9t8EUpDS5OEFn
2DwPS76dEaLZ4BQRkxxYSocoA0TSvBsBYtKl5o/k+COS0EMt9Q/Tfpxlujfv
7e673ff7uOfdPu/vO3y1Tcj3kUgk+U+v/3+ff+6rnn6JJy9Wqz0PEFxYNLQr
p9tzPwm3br1ZJ7OTT0Vc9GGfFHuL5z4QuVLZ1+xBMJh+K1i1jVyKn2ZVnGMP
w5zyqJVdDvIIhI1KW9kjcXb4YH/GV+TR6Ltp/5J9LnzfSTOGlpHHInzGD13s
MkRclpwqdJLHQff+ldPs89BdceBu+Vg/H5+HvtDBLscv0zfJH24mj0dRruU6
uwILHY/6K3aTL0BD75/N7AnYrvN3VFSSL4Q23XGSfRGC/4ps+72UPBEb3QNH
2RdDplg5sq6YPAl/dzzuY1cienSDwl1N/jqGB9T97G+gJSTPHjJ2PhUUOavO
sAPdAceERHIROF+l8Zq/GqVbXKl6K7kaml8vuNmT8fGMfR/MrSJPhuubCyfY
U/BF80frY0rIUxBjU3q9/1Q4tl7VNOSTp+KTtlPt7Bq8GrUzZvvY/9Ogd4fY
yL4EUovs/ls0H3EJBq7vOcu+FHMk793ZQvslLkVAf5eTXYu1m5w/T6H9FLVY
Xz3Oaz5psE+a0la0lzwNOuWg+cbLlR5PR6TcJ7ngs+MeT4cuVB7LrkOO3yW7
0kGuw4pthxLY9bALG1Yk7CfXoyXzNS/PQGmKn9y3nTwDDbG1SezL8I++efP3
heTLsC6sbgF7JprKnL3SE+SZqPvWDXYDbAnndn/n9jgMaBoqUo25aIAwLdU1
VOBxtwFXav5QcG/E2l0B9QGnqTfiTJPqFe6NuHjt3uqZH1JvxPi6J0ruBbj6
NtZWDVEvwL9zYiL3AuJc9SM9NdQLuJ0TsYh7E7ZWBs9s7aHehJEnD3h+ogmh
n757c28j9SYEDl7Tcm/GHdntzAet1JtxvrhnPvdmmAePTLbVU2+GperHadxb
MO9AfO4Nmg8ssB/5l88nWjAwe03UmgbqLZAXhwRxnwX/guKXhnOpz8KE8HsC
91lQTnAFHeugPgtJmjw999moVT9uVdH5kA1tnh/vh5iNt5Pj20026rNRdlUb
z70VjZg9+qKZeiscSZ1e79+KzhLdXTntn9uKkoNOr/1ZjlmBx2suH6V+OXxb
Lj3r/wN9IMGJ
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 101.}, {0, 6.495344008470184*^8}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with R shock\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 101.}, {0, 6.495344008470184*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Freedonia\"", "\"Merika\"", "\"Cathay\"", "\"Rentistan\"", 
       "\"Develpolus\"", "\"Bellicostia\"", "\"Hippieberg\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.672613163507222*^9, {3.672613510575159*^9, 3.672613526341509*^9}, 
   3.6726148432204123`*^9, 3.685812538180908*^9, 3.685813121075811*^9, {
   3.691523648082004*^9, 3.691523663525419*^9}, 3.6915241747274017`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7zPKeCsYkLqHWYiRupNbgDd+AS
tLVB+nyoX5y6vMHH58unriRPP6d1/31fjdb//fNto/3Q7HQ37sG9uA/34wE8
hIfxCB7FY3gcT+BJPIWn8QyexXN4Hi/gRbyEl/EKXsVreB03cLPTBWeDjrNJ
x9mi42zTcXboOLt0nD06zj4d54D+6/Ly8druh50uOEd0nGM6zgkd55SOc0bH
Oe90ExdccS7Y44IrziV7XHDFuWKPC6441+xxwRXnhj0uuOLcsscFV5w79rjg
inPPHhdccR7Y//sbH9lKkg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7zPKeisVsoQXAhbqR2YewOXII2
NkKfD/WLU5c3+Phy+dyV5On3tO6/77vR+r99vm+0H5qd7sY9uBf34X48gIfw
MB7Bo3gMj+MJPImn8DSewbN4Ds/jBbyIl/AyXsGreA2v4wZudrrgbNBxNuk4
W3ScbTrODh1nl46zR8fZp+Mc0P/88fXa7oedLjhHdJxjOs4JHeeUjnNGxznv
dBMXXHEu2OOCK84le1xwxblijwuuONfsccEV54Y9Lrji3LLHBVecO/a44Ipz
zx4XXHEe/v0D6rwoOw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJxN1H9M1HUcx/ELmSPCE1lAiD9CDnaaEL9CVH68jgPhDrk77jdRZAWZ4UYo
V0LTvkVqDe4GMmkkMBH5oQhWrnPI1u4om5uthciPwTI5wj9cl4YMvc2tYt2b
93237/f2+T72/P76fHZRb1Vqy/1EIlH5f/vy7//bw6zlY/qD4zLvCXQ7/cQZ
Cz96xwEIDDAcirOQB+PI3aCj1dMD3vHzePW7L8+xv4BWc61yoW/QO94Abbq4
k/1FVG6ytH+tJN8CcU9zH7sEdxvO6Oxh5LHI+NN1il0K09x4SUkC+TbU2FVW
9u1QtLXU/BpOHo/Vw9aL7Alwx1ydCgF5Ino7t37KnoTaNxszD2whT4aQ4qhj
T0HB6PWp0AV6/1cwPrTtC/ZUtLsTfju6SL4DoyZ7G3saRtxWR4qJrr8TszEV
AvsuiLJbVH4e6nejJUnv8/zpaDVer7RXU5+BzwNtNvZMzEZO9Gvk5FkY+/vm
SXag8blKT+C89/oCULBo6GGXIc/5yb3uAG8vyDBg/Plj9mxMdF0eDlrxbKw5
f9Bn/uWoMp64M5ZFLsd0VLSP52CmY+yvnEm6fw4Sn8h72XOx9IZVYSqlPheb
JdlN7HtQO1KTtzOSfA+6ZtZdYc9DvDp66bKMPA8/PVa3sOfDNSP6PjiQPB8P
3Qaf+VNg7e1xd2wiuQK7J26kzYULXlfitTPxS84qciVuzYmT2AtQ1T/wdkcs
eQE2F17YwL4X3z44IVVvJd+LmaZDUvZCDE8lL/6uIi/EHc8v29lViDjbOvs6
rR9BBc9ZZxS7GkM1Fkndu+RqdM/uj2PXwP/ie0dE73gdGnx17XDoigsaNG8s
zhxN97pDgzbHsUTui9B/rOKlK6uoL0LfBw1ruC/CNbtt/8311Bdh8rOwVdxr
0V4Y0mGWUq/FwcmEGO61+GdXxMCOj6jXonTQFsK9DnHJN5p76f8DOlhSxyO4
1yHysDBfRvPv0MF/yd/n+fW4HZ7bNR1NvR718fNi7vV4+WlI9L5c6vU40Hlp
0bXSG9Dg7E7pr6DegNTk0xu5N+D85L2eWzS/DgPWXsrn7ysyojpV1vxHEPVG
yPVWBfdG2I7flz4qp96Isgs5z3JvwillU0+7hHoTBkPf5+8jmOCJG6pfn0a9
CZuCXZHcm1FfFua20/qBGXWPHvP6FMwwl1hKfzhHvRnf6D5czX0x7o80Yl8U
9cW4+oxLsuz/AsNbvLw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        LineBox[CompressedData["
1:eJxNkllIVGEYho+5j7mWZpmkluG+5eSur9u4jzNnVsMSK9OEsAwVgugEQmnZ
RUh1ISRZ5IVliRCJF4IQFIJloHUhQSiCiUpp4jIzZYnnHZgZnnm/5/vO/38T
fLZBrNkjCML5v+/t7/+v5aztT6lVnb3zA+42vl145qPbYRcc3fg2Pb7LXvh1
z8Mi836sh/RaZfZHbJiDTebDCHdyJw7C9YzfVB8CadSL8mMY7fYgPo60Vmfi
MDTHORJH4F2JHXEUrj6wUP8YrCz6UR6HzcoDxPEIXXIlTsCXUwHEJ6AeW6N+
iYhMsxEr8XTCnupPwm/RhzgJfhXMyXDz3CQ/BQc/u1Geiqoqb+I0pM+7EKcj
OJDnZaAnaB9xJsbXPYmzcHqNzwf0TytkloCZDp6Xjbp4qpey0TPF+8pByzTn
OTDM8v5yUZbsT3kuHAat5OfBXUv7lfIQMcT3mY+XbSsyS/l4Hcv9VWhvov1K
KtTMr5JfgNoMfr4CDDTz/Rdirp3uUyrEDV+6D6EI4icnyosgLSqsSV2lO3kx
lLNtll2WijHeFC6zUILE7q0tOS/Bw/5Qykuh7IokvxQtd85RXoaCKw2Ul8Gx
/CLlalyajKVcDeGJPeXl6Ku/QHk5Jl6kUq6B5keAzNCg7v0Rqteg6taG/Pwj
Gvz8HkO+FhuTq3IOLRwM1F/SoumNv8wjWrTftsn1gojKM5k0X0TC873kixge
tiNfxHJfIM3XQapmX4eZr77k67AUrSdfh/wANfl6DKmcydfDvXqS9qVH8s05
Or8efdHB5BtQ26si34DBdZ5vQGN8FM034MPlBTq/Edc6g8g3YmiA/j+SER2d
VppvRP38IZpvwuNX1A8mKLxTyDeh0Ez9R0x4ZAoh34wxpYV8M2xTLuSbcWBC
Qb4ZH22u5FdAvK/8x38A8UjAdA==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 101.}, {0, 7.028393240215346*^8}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with R shock\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 101.}, {0, 7.028393240215346*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Rentistan\"", "\"Develpolus\"", "\"Bellicostia\"", "\"Hippieberg\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.672613163507222*^9, {3.672613510575159*^9, 3.672613526341509*^9}, 
   3.6726148432204123`*^9, 3.685812538180908*^9, 3.685813121075811*^9, {
   3.691523648082004*^9, 3.691523663525419*^9}, 3.691524174868762*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw9lA1Q03UYx/965YCCELmE8GJwSkNehSAQGt+NAQPZxtjGJihox87S0LoD
efGFPxOyAK8ZFxBiWUB25KKJnnCITZaKSMflaZy7cbDqUIg5MD1BL4vOPdvd
tvvss++e57fnuV/QO/tytSsZhtEuP/9/f/6YT1l+2cH3/lHg/AAWjnnEw8Nn
6Dm6gRcxxHoK3J3sjar1Vp/mBmJfqEqCG8/9TOyHySmJfupz4nXo5rXpFs8T
c6HqzDRoW4iDYU545ZSonng9Hl2PlHl2EIcA7MfsUjcxDy+2FfpeO068EbUN
+eNPrhOHY39dn0h8ijgS94V246U/iaMxIe390KuZeBNmsn+zwFUvBi/HSQZW
GYljYb3hPX7TQPwmOvQjdzu+JY6DWnvCfvY74nj8ZCj/2qEnfgsbsop61rr6
T8CwNfjTyTPEiVjDHo1pdvW7GXWl3MWLVuIk3OIkStObiJOxOn7qRmkn8dvI
2COS6MeI+TCrrAvug8QpEO5YmP37ETFwbJZRak84mQUKA7RB0jbyApx8kv14
uJ+8AFeuhLlF1ZAXQuyVzla0kxciujRbfvgY+VTsmy1+8HCAfCoCi63HQx3k
RbD0nOv3byUvwqECjWfIV+TTkJBYqXupnHwaOmta+JeGyKdjZ+TqzgiaB5uO
saQef72JfAZCKy19frSPbAaS96vFL3SRF6Mx5ZPyIzQfVoy1F+bsr/eRz8TA
TNh7brRPbCYUiyu7Gl37k4X3620Njlvks3Dw6vSzbaPkt8A7NZ3bNk9+C/aW
/N572rVP2VAP9o/O/EM+G1WFUc+4w+Ql8OJVzCTfIS/BEbZMnniZvBQRMqMf
Z5WH00tx5motR+6qL4NB+tT/pKu+DP/W9O+eN5PPQdFrLZam752MHGgWNjEx
N+n7Odigezf2C5q/KQfnr6lj83spL0eAO6L3jlBeDlvTdlvYH5SXY/PtixNC
6sckR6Cx8rHwNuVz0cv7ZVc1nQ+58Jv64NXWIDpPLvasCVHumqB8LtiyCIfO
NT8F2os/MoHmDQUqVlhmAx5QfQU2dtllqVOUV2Ai3C7YTv0xSsSf5rS2U39Q
gh83aPiBofpKjGdF1xfS/pqUuG/m7PRy7YcKUcJqx+gc5VU4zEuLLab9ZlWw
Pey6MEf7alKBu63qzoSn8/eZPByQ8Ccv2yifhxhjdW0S3Q9sHswFVYG7lyif
B3f5GyIdh/JqfMnjiJt9nAw1Sg7e6y6h/5dVgzvdFBdN+2FSQzXQ882vdD5G
g0NPC8aazlJ9Df6qt/neo/uC1SB0XcPdOurPpMHkrKGGS/WYrQhvy1/xGZ0P
WzFdVnRgafm++g9grtHq
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 101.}, {-1.9369472688757668`*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with R shock\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{0, 101.}, {-1.9369472688757668`*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kleptopia\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.672613163507222*^9, {3.672613510575159*^9, 3.672613526341509*^9}, 
   3.6726148432204123`*^9, 3.685812538180908*^9, 3.685813121075811*^9, {
   3.691523648082004*^9, 3.691523663525419*^9}, 3.69152417498317*^9}]
}, Open  ]],

Cell[TextData[StyleBox["\[Phi] shock plotting, ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.67261290821944*^9, 3.672612918550116*^9}, {
  3.672658179590869*^9, 3.672658193610507*^9}, {3.672658252259008*^9, 
  3.6726582525153847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaPhiSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedoniaPhiSHOCK.mx\>\"", "]"}], " ", "//",
     " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaPhiSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerikaPhiSHOCK.mx\>\"", "]"}], " ", "//", 
    " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopiaPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathayPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistanPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolusPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostiaPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergPhiSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippiebergPhiSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672612980421198*^9, 3.6726130142136717`*^9}, 
   3.672613550264583*^9, 3.672613614814622*^9, {3.672658254590952*^9, 
   3.672658283116098*^9}, {3.672658691308918*^9, 3.672658707191038*^9}, {
   3.685644781571847*^9, 3.685644821281851*^9}, {3.685645021664353*^9, 
   3.685645039324909*^9}, {3.691523959090087*^9, 3.691523966801175*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,90,17,
   21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523983366827*^9}],

Cell[BoxData[
 TemplateBox[{
  "Dataset`ExtractRawData","dataextr","\"Data extraction failed.\"",2,90,18,
   21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.691523983388257*^9}],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,91,19,
   21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6915239834117804`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Dataset`ExtractRawData","dataextr","\"Data extraction failed.\"",2,91,20,
   21370627736111556251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6915239834342327`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaPhiSHOCK", " ", "=", " ", 
   RowBox[{"FreedoniaPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaPhiSHOCK", " ", "=", " ", 
   RowBox[{"MerikaPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaPhiSHOCK", " ", "=", " ", 
   RowBox[{"KleptopiaPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayPhiSHOCK", "=", " ", 
   RowBox[{"CathayPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanPhiSHOCK", "=", " ", 
   RowBox[{"RentistanPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusPhiSHOCK", "=", " ", 
   RowBox[{"DevelpolusPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaPhiSHOCK", "=", " ", 
   RowBox[{"BellicostiaPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergPhiSHOCK", "=", " ", 
   RowBox[{"HippiebergPhiSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6726130541249313`*^9, 3.672613096427991*^9}, {
  3.672658306401094*^9, 3.67265835296786*^9}, {3.6856451404214563`*^9, 
  3.685645184354813*^9}, {3.6915239719940643`*^9, 3.691523990353272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FreedoniaPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MerikaPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"CathayPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], "*)"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", ",", "Pink"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CathayPhiSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Cathay\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Pink", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RentistanPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DevelpolusPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BellicostiaPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HippiebergPhiSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KleptopiaPhiSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672613118310802*^9, 3.672613150860641*^9}, {
  3.672613523713516*^9, 3.672613529351377*^9}, {3.6726583592810497`*^9, 
  3.672658392003055*^9}, {3.6856448266342278`*^9, 3.6856448408581676`*^9}, {
  3.685645062949885*^9, 3.685645112525385*^9}, {3.685645212395081*^9, 
  3.685645217467255*^9}, {3.691523723406331*^9, 3.691523781309552*^9}, {
  3.691523818914143*^9, 3.691523835153665*^9}, {3.691523878110037*^9, 
  3.691523913829597*^9}, {3.691524344584894*^9, 3.6915243903937683`*^9}, {
  3.691524425490921*^9, 3.691524483545761*^9}, {3.691525075741455*^9, 
  3.691525116804408*^9}, {3.691525193647759*^9, 3.691525217836967*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxNlAlIk2EYx7WMDCml2yyWR5FHWa3DsvQ/ncc8lrun5dFlgqKwWhrL+qJM
krIoyUCl20UlDcpKM7USgsxusYwEy0rC1Ao6YHZY8f032MZvv/f/Ps/7jPfz
Xpen3jjCyclpw5/38Pe/12D48KcptVj2/wcE7Kr2LLEJ/9kV/qcC9BaRPRDo
0WUvFHkifuY2LCNPxUW3Gi15OhQrvzqTZ6Jjz/0osg9sMc4ftovsB+m7li76
2fC7aWikn4N0uWYCfQDGSVrM5CAUHH7exvXzMJAgiaafjyH3fCV5AbpyGyeT
FyJrseky81J4743rIy/C48oyOdcvxi//mlnkJYh6fbKd65fiSlP3GfoQpM1z
GU1eBqtqZjfXL8cbS9sF+lAMemY69LcCgvmolLwSkvf6MeQwSNYc9CKHY7dr
QQP3B0aF5PmIXgBKLFcDuV4G387yEHoZThb7pdFHoLp8YQZ9BBLDzQ7ziMQz
hSmYPhKbzm3bTC/HPmv/V7EfQQ7Fjw6HeURh/stXWcxHIcu5UWD/0Qj28T5A
H438lI/P6WPQ1vpNoI+B0j7eYR6x+OA+rZ/1Y1Fkd0ulVyB1ySOH8ykQbH2R
SR+HirRJNubjENs92p8+HukuhRb6eJhtgsP/m4AS23tf7p+AqreVD+gTEbB8
SjZ9Isa+a7pGr4Tx+iDPKyjxvahqP/0q9HS2j2R+FXzu7LxFn4QSxYm5okcS
et/k1nO/JKy+fHZA5OYkfFHWVzCvwqnx9jnMqyC/W8D7KaignGr1Fn2zCl4j
a1qZV8P9mMtxkaFGQ3YN76OghrRd+5D11QhbW7uF89WgL+/8EPMa5MzOu8f6
GlTdMC1ifQ0ytvpyHk5a1CbbbzOvRVBa0CbmtWhyzpQxr4V5bWUn+9ehY8Hn
08zrEPisVML+ddB36y6xfx2anmwdxfp62A6l7GBej4jcHjXzetSNkxxhXo/Q
nTPWM2/Aar9s3gcYUFa37RP7NyB9Sxvn3WyAxVrr8Dw2ojR0sJd5I5Kl5eeY
N6LZ5D6C5zdiKOVmC8+fjMCcp3+f378BXFPN9Q==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxNlGlIVGEUhifNssXS1NYh00p0EpcyM7d5ddz32ZzrP8vCMnIC0TJbrkgE
YViNUAZFqKXtUipFi8uMRojYgluLGKaBRZYtgpS0Mu8dmBmeee8z53zfd+51
32rUbLeRyWTbfr//fP97fVL+/hB1AabI/z/g+nS146H6E//ZHq6ZhVn7rOyI
pLBHcUVWdsHhiesCeSnGHS5O8Ho5ws8VuTFfBdkGzUKyBxLe9oaS12CXpnwl
2ROj2vlBZC+YC3auJisQW633IPtgmVmnIvtiSjO2lOyPMrnchxyAisViJnk9
hg94eJM3oF/504kciPtD1bPIGyHmlUr6C0L5DT9Jvgk5ikZ7cjDOVRyX1NuM
o72vPckhmFyeP879C0VXV64d8zCcrVzhTg5HXdhoBDkCt71yg8lKvGz1l+wn
UHVt4wIri4DtZVUi80jMzfMbtNYXI9FZrI1iHgVVyG5b+lG4sCh3LXMVZr+6
PJu5CrOaW0e4nmgoPTvYnxiNyewxyXpi0Pe85yPrx6DD1K5kHov6ctMy+rEI
Pi2XzGMcCr5c4n6LcbARb4Uwj4fDiyjOnxiP5nCXHOYJcD4Y/4T1E2A5ufwz
+09EylOB5yMmYrSx1sw8CeuvFrcxT4IpuVRynskovlLwjXkyzNmHbzBPwcy6
U++Zp6D2gaKXeSpsgyp5f4mpcC4buMk8DQaZRfL/aYgpPNnHPB15Ad1dVkY6
lD3D/bw+HeouhzErt6Rjr8vdBvpq1Dp1cj1Qo8zVbKGvRrFReEpfjb7zfc/o
a+C86RXrQYM9xrzH9DXwqbk3RF8DS0NTO30tFO+6O+hr4TglSM5LC6f9Wybp
a7HX9s5X+jq8PNbWSV+HEOV8ia9D+Y/6GdZ5aNGhwnhEMr96zAv8/py+HoMD
dq/p6zEiuHH+WvSIb3DjemUZOOOVxucDMvB+Qf47+hlwW7dD0n8GzhqPD9M3
IL+ktZH1DSh8UzVF34AlvUUP6Rtgas0aoC/Ad7KJ/UJAdM30B/oCXEq8eZ4t
Akrs5HN4f2Sif+TW3+fDL2OK13g=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 100.}, {0, 8.05*^7}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with Phi shock\"", FontSize -> 12, StripOnInput -> False],
        TraditionalForm], PlotRange -> {{0, 100.}, {0, 8.05*^7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Freedonia\"", "\"Merika\"", "\"Cathay\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.691525097803615*^9, 3.6915251190428667`*^9}, 
   3.69152523006887*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5]], 
        LineBox[CompressedData["
1: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
wMYdlNCLXZM3mvpXnJXQvx3D6f9VIjVMcHEb7c9Vvb+9WUy+3JTwCfnjqnn/
z1OJ1TP6cPRfiQ6TTg14R/GFrxLDfk9n8S9PiVWStkbGlN8OVGKtPqc/IkSJ
c7eKlmvq7xFK+B95wbn/psT8b2tXBpH9j1dC98dAjv4rMadn524VtL90JUz6
hTD7wlei6frPWwlEP5ESiQpO/5pEiZVT+gX9S/5DocTu9zYMf6qUGPgyQdlM
+HO3EnFabux8BUpcd8n75U31i0Il2lzcxfS7SAn3X3oJTYSPTygxa+1ERv9i
JerMj24TEj4sVcKzfB3n/T0lrINHyL6S/S1X4mjDDmbfK5RI+Jhu/4v4W6nE
1rzhnPdZlDD8p7XpFNGnWom3Oz8y/tYosW+JTfJ0zf0fJabXTWf1gTol7hTE
Vp/Q3P9RospTyeobDWr51Hvbu7+m/1dNr+fvOPU/JXjxnokK0p9mJZxyOfFL
ixI/jkzRklB83KrWr/KxnL8fmAeVm558j+b+Tx70/Bcz+62Th6dHY0ovE/7W
zYO9Zy9O/S8PYs/fRalk3w3y4O+4j9knwzysPdrrVwTlD43y0M2d876vcR7a
K2MvbiX8bJKHB7tSGH4wzcOQA9L9A8i/mOVhpSqCfd88Dzc82yxu/4n0Pw+O
UZz8hFUeSq4njnhN/t1Gvb9e5znvD+ThlePqnhMpP2qbhy/1lxl+t8tDfezA
hLbUX22fh4FT7Dj5/zw8+2SRMJDsn3MeCr4ncvp/8mA65R+HXXQ+1zyUjQ1j
/tstD0MvLxy6geoTnnn483E/p/8nD8e0gnKf0LhvHvgeUaw/g6f+/blGT9pQ
fBqYB1G/98w+h+Qh9JKHq85G0v88uGeO4vT/52F059ELzTT9v2p5OMDpj07O
w8V1iXIdyg+l5+Ht9mkMH/Lz8Nnf7VU7/f/uj4jy8Oa3AdNPSR7+OdPBYzPh
Q0UeXGeVMvlR5cFFT9H7MPmX3XlYt+YQ5/5fHnzev+1nQPFBYR6mZq1l9qco
D97To4PMCP+cUP9+4GFO/28eCnV/jelN65fm4VD0X5z3s9XycG71sjfkX8vz
MHuDNcNnFXl4Yjc9fjLdf6rMQ187zt/XqVLvX3un6jrpV3UeZq5az/BJTR7u
3VmjsCf61arXq77Gwf95WFTx/m4Hwrf1eYj8LGLnb8hD4LA8hzNUH2nMw/K4
B8w/NOXhltnmqwYUXzfn4YTfBWa/W/Jw9ddQXT7FD615eLl/Aaf+l48ps63n
3CX7qp2PnOTzzP7o5OP8og6n71L9Xjcfygwe0w+9fEw94zuKp8n/52NTlw2M
/4b52FKq90NC72MZ5WNmNufvHxjnwzLJ8XsL4Q+TfCSMLGX9Wab5sCo5Hn6E
1jfLx6DwamZ/zfOxYP/tCb/JPlvkY2A7E879v3wYl/gF8Gl/Nur9yh9w3p/J
x6Tvqa7Hqb/DNh97/xrF7IddPjLTjnv9S/GFvZpeKg7+c8hHfe9Ri8LJfjrn
g3ed836+Sz5Ktbt8zSX/5pqPsBPvGX3d1OtvvtLenOoXnvmoG+3Pxn3ysfZz
7ycuGvyfD59PCzj+Px8d/3fj5F/kHwLzMUqxidP/n48Nxw99X0v55Yh8lKsW
c94/zsfr4+v71JF8xOfj6hw3Jp/J+Wid+bo8VqP/avq928rwIT8fiWuPPFUS
/hTloyjhMcMfknwk91zctivljxT5GFu3m9UfVerxi1dUtpQ/3p2PpUFPmfwW
5COpWWfXY4rPC9Xy+JPz9zeL1PLmht+7qD/4RD6Cpnmw8xWr5enFoEh7ir9L
1fsdO4y9H1ym5k+SGX8t5VfL8+EbzqmvV+SjeP6/y18T/qzMh1v9B47+5yN2
jXZzH83933zIFr/n3P9V8+NZ0Eo++ZfafFzsbsC5/5ePHZtfZpjS+evV/NJS
cPB/PvYvCe7nSeON+Rgx8xj7+51N6v2dMyseRf1Zzfno37cHsw8t+dD1WdB8
kvxfq3q+rj/n/XcVOvs8nqhN9rGtCiYZ95h+aquQcSNgvCPN76DCrWtBLH7Q
UcGt7bLIQsofd1Zh0+fe7Pu6KhytWDzYjOrb3VR4tjiGgx9UuHd1l4GC/GsP
FSRL3jF8baCCddWQtPcUn/VWYWObBZz7xSooPK+v/079cf1U2H/hGVvfSIWC
+782RlD9ZaAK37s3cf6+jwoNVdfMh1J8P0QFrcFLmH80USHxXbuU+dRfNVyF
H0vOsvmmKjy/8OON5v3lUSrM3qbH8o9mKgw409e9nOzTWBV8AjjvD5mr1+Ob
e96l/v3xKhjNHsfyPxYqrKqt6KlN9J2oPt+KQ4x+Vip4Pm47IpDs22QVni4b
y/hvo4LT3SyLdXS/aJoKp5wvsv47qLDZVPo0lubPVCHz52Bmf2xV+Oy4ZIsx
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
N3F9aqgKLWrXnhpG8l2owo0UV8aPxUI+7nMWjqX6paUqxB6T3S+xXIUzKSu9
9tH6halQs9xpWf9nYf/KY3U3UnwVrsLLUFl/7rVifaOGv7HQ+NercFqSnc/f
KOxjb6P83YQ/EcJ+vlTg8x1bVHjXaeGYcuQ/tgl7bWHm+e9Qod3O+IjuFB9H
qlC/VEf+/d0qvDnTdPEye/5ffF8XJztfKuxh8L/sORSfRamw3zaH+echFfb6
OUSto/2fIwLfKv+V3d+owqhiOVNNdP5IqcK+b01ZP9UqnF9eNH3RfPL/KvxX
bifrn16Fj0er59UjfmtUIeTeIpa/WYWDidU2fqP4wqqC/46ysv7VKuh/pD6e
QuOPVeFJj6rMj44L/Bx38+M0wueTKhx/J7vf/bQKmvjVTxJIvnEqzJhfmuOL
eBWCQzuFNqT84HkV7i2qzPK7qEKceU2ty7T/d1nI52Nl5g9XxXx3Z46135+a
oMKIW4UZ3xNVMM15tFdP9nNTzOd6OMvntgru+/RTZ1N8fVeF7lV2yM7PqrDx
ZKdC3vT9ZBVc0wsYPx4KvJg/ZcAA8q8pKkzfGymrr1XBmnt8WCrNL02FowPr
Mf97pkLns07Z6aS/z1VY8XYT4+NLYR/lehb+S/vHGSoc8Mli/M5UweWbrt9e
Wr8sgZ/hIcx/3qlw7aRb07KU/8pWIaNwMX7/owpzM19tKk/x72eBD32DWT+/
qmALedXJn/A7R4W//Qtk/l8Fr0oHuwyl+C9XhdphvrL9fRVKVQrYdp/imzzx
/vzH/H6+Cr0XtvIeQP61QPjXE3pen0Jq3Pz2+clZip+KqDGkShnGn2Jq5Dl5
l0ui+MdBjf/6bpWdD1JjeZpuvF0/S6vhO28lz89RLeKZqL8Xid87qeH9oIHs
fkk1RnqVrz6A6k8qqOGxoDHn11zUuO49q8190q/Kagy8Kusv6aqGssWZ5GSK
39zUmO8+nvmduxpeJdb/CiT7rqFGFWULWf9BtcDH7X86U/7GQ43CobdYPzzV
GLzqgf8Dqj+rp8bhJR14/b3UCO61tugA0r+GarSN9+P6n8ZqXNmeGKUnfPRW
Y/2/DbL78dSIzKuz8Rjhbws1Hp39xfJtpUahdJdhvym/6KNGqery+iY1ztZv
8/AT8Yf2ajx915nxuaMav25kdLURf+2sxovmrWX1T2o4drLES+S/uonvf9/J
+NVDjTrO5QMDiT/0UmPl4zjZ+Qg1jElDBzci/9xPDefqWayfvmr0WJLVsRfZ
70A1hj8fyPn7wWqs27E7rzDlD4eqceLbEK7P8RPrZ/bSe1B+YoQalqM3ZfXV
amzMjt1yivbn/NVY8l3Bz8eqUSkrIv8w2e94NWopasjOX6sxpkywx3SaX4Aa
Kwa4sX4EqnFh6MrEZVS/GaTGlPvX+fvThPy6hA4tRvHZDPG80DXWn2A1Zrzq
eP0HyWe2GhGtp8nuJ1fjUqk5gTMovglR43ElWf/GUDVa9UhpfZrGt1CNtUmy
++EWq/H9aP/IdhRfL1WjTUAW69dyNS4mTTvQhvYHwtRYaJXdL7hK2K9Ld8UV
4pfhakydslrm/9X4u7mnOo747Xo1tH9ay/rDqPEp/b7zSLLPCDXqnhnJ8d0W
NbZ885wRRO9vE/M5dEZ2v5aQ92ufm9cI3yKFvjSRnT/ZrUY/90t1Vtvz/2qs
Lr2d+ct+NR6mTz3qR/gTpYZ+/kGWzyEx31IrPrwifDyixr0dY2Xnz9Uo0Ldv
qqX8nFKNTZX28PtqIe9+cbH2+4G1auysUorxXS/w8cvYq1XouVGNzj+L8vtm
Nc7VjLvZJof8vxqVq16U3Q+qRu6gRUUfUfwaq0bAmi8s/+NqrGoW8CSF/MdJ
of8hTTk/elqNj0PO9alB+hOnRsueX1k+8WK+R8auOUb4cF6NuOhunJ+8qIZr
vz9l3On7l4X+3ZzM/veqwKuPs2LeU/yeoMbLQaGy/hhifE9qu20jfnVT4Flf
2f13t9Vo9HX46lfEb++q0f+dzH6T1PAsqYwyUv1Oshqv52QxP3iohnvd0p/9
iL+nqOHWQ3b/WqoasZ81H5fS/laaGh17VWb9e6bGrLKDRw8l/HiuRoL6N+Pf
SzG/WsVjbVQfkCHm5+vC9pepRlix5uphhE9Zwr4q1+L336mRNXVm+XJkf9lq
bF/xgcf/UY3AvRUdLKS/n9XYtXGCrH+fGiUb/N0+jvxvjhrzBjbg3/+hRkyI
tpQLxY+5Qj9LT2R8/qXGtoGlZzcj+eWpEb+vH69PvhrhxcPX3ib/USDWY+ZY
1o9CGuxstCJca8//a9DYRdY/p5gG0rPG6eVp/g4a/G64hv1fSQ3Oen12SaD9
29IaXOjxkfXXUYO0Yvo2DYlfOmmwwG8D+w9nDer0TKjpTPFJBQ3uDfBg/umi
QfQl5bqtxD8qa9D33hPZ/QIalBrrWbg+ve+mwejRsvoudw1eHvJbO5Di2xoa
bPdaKzt/rMGhdFOT+nQ+10O8/2AC8w9PDfrcuPp2APHHehqsfliV88teGrjv
Dmpel/hDQw2+B3Tg7zfWoNC/k9c3UH7EW4N501NZvs00cCtWYlFD2t9toUG/
Iqdl9X8aLBp5afIiqt/10eDyvpOM7201uNbhoM9gqo9ur0HeYSeOLzpq0KOM
R4Cv3f+L8XlGys4/aaDcHF1lN8Xf3TS46pvG7/fQ4PSD5NB3lD/spcGu/DrM
r/poUH73oXkexF/6aYCZ7WT5f/H3ks3d/pD8B4r1dZ4kq5/WoMyc3p+eU/wy
VIM1f93Yfv002PNhccsFNL4RGvgdz5X1VxL6se0/40HK7/hrcL+VkfFxrAa1
xumjXCn/MF6DP4onsvOXGrSPK5XelfA7QIOJ1Saz/QQKeXt4j25K56eCNFh7
Zhvzq2ka/IweOLo9+bcZGmjXR/D+V7AGS2bVePGd+MNsDeJnnmD/MFeDJGPj
x6FkvyEavCruz/oRKr43tV5VC+WfFmqwT2ni/tCLNQhNPTQ+keozlmpQsVgc
j2+5BkWPHt6YQt8P02CzRna/0SoNzq/qMWs48aNwDTz2jpLl/zUoOa2ItSTl
19drsOHddrb/jRpUyOr88DLx3wgNPg34wd/fokGTHJPLRuLP2zQIG3GW47cd
Gnxz7l//OI0vUuBPzhd+vluD2WNuO44m+9urQeFpA2X3Swn7vDSx+0Uaf5QG
lWKr8+8f0mBIvX9HmhD/P6LBmWJejJ/RYn2muE9vNJn8vwb/Gpfm+as1eP36
veNS8s9aDfr/ecL6r9dAkdCgpiPhv1GD9wUn+H2zBo+rJrk7kX1YNZj/3I/x
UdLgSVCf8UeJv8Rq8CM5TLb/r8GA2DqjG9D7JzV4c/wo4/dpYZ/p780Wyh/E
aRBZ/Av/frzQr+YN978i/3he6Ef2XeZ/FwVeBPb72ZDw77IGd0Pb8fOrGjg1
Sds9lfx3ggaXXLfK+mNo0Cy69n8b6PdvanD9cy3O394W4/3Pb+s54gd3NZgc
WVUW/2tQc+rpMp0of5WsQe7h0ZyfeKjBrwcuj0NofyJFg9rDDrF9p2pQUL5e
yWvkH9I0eNviDuPjM4FvafdNp4j/PdcgMPUS4/dLDYrYvu6/RuPPEP4u7zPr
d6Z4f4fxW+3X5P81eFotjOXzToN2s+Iz9LS/l63B84javH4fhb5WWTLCmeT/
WQP/6AXMn78KPCwcXuU2xQc5GpQemcb5px/CPs9lHbbXZ+RqkPg9TdbfR4OT
XctP20b1j3kCr4KK8PN8gecTKoaWpP2NArEeSSk8v0JaBH7MHlGE8KOIFl2/
qRkfi2lxOSugVjPi9w5aNPxkYf5YUovb/ZSh/uRfSmux9N8ujn8ctdgdvLL1
NMqPOGlRbb+sv7ezFmPKbir3i+ZXQYthlii2bxctduVlN2tB61dZi45HQ/n7
rlqEdLzzugHhk5sWV58ektX/aZFQwd+rOelfDS3GTx4m6z+sRYsT486uI//m
oUXVw87Mfz21uJbgdmAi7W/W0+KMQx6vn5cW7mNGtK1M96c21OJGp+WMv421
yP9UZ04K2be3mO/lUbw+zbQo7GeaMZ34bQstujg1ZXxppUVfT8XfAsJXHy0O
XAtuw/5fi7LrI/vXp/izvRb3dndh+XbUYmhoWd0bwtfOWmxt/or5DbR40HbO
WSfiv920KD5Cx/nbHlqszr5UfzPhQy8tzhZvL7sfUYuvU06ef03xWz8tlv07
J6v/1+JVxNqE6fb8vxbqdn9l/dO1sNY9c7wxxS9DtdiwZSPnB/y0GOc+9PE4
sv8RWqS5ufL6j9Jiwp/GngmkH/5aLJnkyfV9Y7UYNambz0vir+O1qGXqIrs/
WovPhuhrfen8XYAWjzvI8D9QC0fPpPxc4gdB4vfG9WH8mKbFyz7DTM2pfnCG
FnXLTmP9C9biT3nPpPLEr2eL3++TxvKbq0Wbif5rn9P6hgj7Si/O+heqhXPI
9B1Fyf8s1GLidMj6O2ohDR1x0ony40u12N5F1h9subCPHr4/fEm/w7QYUba4
7P5rLR6q/xpyKT8XrkVUZinOf6zVoumBnqNiqL/Fei1e2BLZfjZqceVQbd9d
tP4RWmCUG6/PFrEe7dfVGU/+a5uwh+aOjC87tGi7YZ2iLNlvpNCXvRu4P8Vu
LX7u/696LeJ3e7WYM74Z87/9WmRP+Bkwn9YvSouF8xay/A9pcTrPVvoB8ecj
Qn/fH2b8itZi5ryt3YaTfJVaTGucI4v/tVj8/KHzHDq/qBX6aJI4f6PXon29
Wx0uEf4bxXpa2zK+msXft91ugPTPqoXXBReWj6SFcZRL7lzix7FaDKxUndf/
uBalZ01/9Zzim5NaVC6vkfl/LfRp/bXBpF9xWizw2MXrE6/FoeOxQ2tTfdB5
gTd9nGTn38Xfq8au60LnVy4LfOtdn/3vVYHH3fv/q0P9BRK0qLMo1Jv9vxbx
38/6PiX7uKlFz/t5rF+3tdC+19d+Rfz4rrDv9R9l92dokfjiQRcT5Z+StWiV
t5zt66HAh6btekyg91O08Kt0V1b/r0VQs+V5G+n8RZoW/m0fs30/02LQ7q5J
52h9n2tR5YZOdv5O4H3w6i3daPwZWlQfX01W/yfwfZd3Xwvlb7O06LAyl/n5
O/Hc9jj5BfH7bC105hzeH/mohVPesUcetD/0WfibRu1k9f/i/bHjxzSj+DxH
i50D7jN//aHFwbJW9XTKH+QK/7Fljex8r8ADr2UF6+l+hDzhX/2ry/L/4nub
Go6y8+8Cge8rL8r2/3XIHvZnWk26X7KIDsMeDmP9KqYT8+ux7j3FXw46rDox
nvGnpA6BDQZdO2WP/3W4/2En24+jDrXuTrk7k/iVkw6n5pSX3S+uQ2HX7+b9
VB9RQYca9xfy/qqLDu2KRvQ7TfFPZR36T7rM+TdXHa5tzlx8kPrXuOlwutkx
lo+7Drd3fX97g+onaujQses7Wf8hHSJe/BtXi/ijhw4jql3k5546rAhqdm0o
5c/q6fCvVz9Z/l+HeSm1O24j/tNQhyYlnHj/rbFO8J1D31bT/SPeOlTeO0Xm
/3Ww5bc6uJL0q4UO1qPlZfX/OviX/DPkPsUXPmI8mTbGv7Y6OH5tOf0e8bv2
Orio1nN+saMOHisvN4ik/saddUhN9ZfV/+mwr5Ui1G5f3XQomJjA+tlDh08u
Jza3ofirlw51d+xgft1Hh2VF3R94UX1VPx2iZgXx93118B3fZcgee/yvQ5cd
svhosA5/mqdPLU35r6E6lP0wj+fnp8PSTy2e/qL80QgdztWT3W89SofY2TuK
fyd+5i/G31F2v/hYMZ7s9fH5xD/Hi99v9Ir920QdNl7s4DSF1j9AhwYjchkf
A3WIPzmoYR75tyAdWv8tLLufTYeS2XN9lITvM3R4FT+OxxesQ9vIa3db0PPZ
OjxNMPH85uow1j+sZwbhU4gONxu+Zf8SqsP7x2Pjp9rz/2I9qnbj9Vmsw+6o
gBoulD9ZqsOlYkNk5/90aNzjQ6fHhK9hOlxI+sj4uEqHJDgVdyH+FK6DpOvH
8ctaHab+VzJxIPm39TpMLFgvOx+uQ0CCa1UL8d8IHU4007H8tujgHGhptYDw
dZsOFTyns/3u0OHn45ya9yh+j9RhytQRjH+7BZ78rLT/K+HjXh1+LSgl8/86
dDi5xc+D/GOUwCdTGvvXQ0K+1+4796T89REdvtXzkt0/Kdaj+k8He3ys1OHY
TbPM/wt5Dhre4BTpv1bYizSH7Vevw/Bvf8qMpPU16rAlQHY+yKzDhz5bB7Sz
1/+J94MzZffX6PCl69TdDpQfjNVhZGQu6+9xHbynl52dRPHRSR3WnMlg/3da
B787E+5lED+P06G0Mprzd/ECP56+6Dmf+vOf18GtWjtZ/Z8O+fdq3lpJ+9+X
ddj+V3a/zFWh36V2R3Wm/dUEHb7vl/X3S9RhW+CDns7kX27qMGRgG37/tg4x
Pz8WvCT7vKvDLkspHl+SDtM9JzUNI/6SLPCidzKv70Mdzr7eMH0F6W+KDq5x
hVk+qTo0nFXlRzr5lzQdajcqwvbxTIeMmefvDCX/9VyH9DqHZPv/OnQrusrl
LcW3GTrcCkuS+X8hr4Qlv3bQ+a4sHdTnxvH33+lQqfWBOa0pvsnW4bU5mPfP
Pwr/U89phYnW97MOC4LP8fy/6uD57Fh+LfIvOTo4rJX1Z/4h1hNu4UVJ/3N1
KN+3k6y/v5B35+cn75P954nxfestO/+nw9fJ/XYuIf5WIPBw5WPu315Ij82p
368Po/OJRfT4eKItx1/F9HDccGChleITBz1eKRex/EvqscovuNh10o/SeuTo
LrJ+OOpR6uf95oOIvzvpce9mHcYXZz0K5/qPUZP/rKBH3Il/jK8uelSYcDf0
H32/sh7VvZ8zf3TV41fxsuO7U/7DTQ9To/Oy/L8eSr+Bri+ofquGHuMzlrF8
aukRlZqVvYviEw89bvf8xvjoqUfHySXMi2j/qJ4e5VraZPcT6+EXcur7IfIP
DcXfF/rw/BvrcW5t7LTDJH9vPRaEpLB+N9OjyWfzf4UIH1voscijEI+/lR6B
2ow344j/+eihmVSO+U1bPRSvgufNIv1tr8d0r2OMLx31+DvKO/Ew1V921mP1
pTKMz9Cj3V+82m0//6/H4dFr2X/00OOiW1OfVMpP9NJjWMe9LJ8+erw7PPjs
GtLPfnrUmdOA+ZGvkJ+2Vrtw8l8DxXqnvWZ+M1iPA/9G9Umm/qJD9djX0sD5
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
aWbUWLuk3n0a/wyhT8Ussv1/M9rGmYMPk33NNmP5Oll8OdeMhmnZ7ZcT/oeY
Mc2tONtfqBl3/xtfRGM//2fG/sOuLN/FYj2uL8hwpu8vFfaq6sr+bbkZNz1d
D9rrg8LMOKdvLrv/TaxvhwZaPfHvcDOUPpvZPtaK+QZ/3lnKfv5P6GsrHdvn
RjMO3DPUaUT2HWHGo/y9HH9tMeP0llqBk6g+YpsZx8rdYvvdYcZ2TauAkYS/
kWbkXa/J8tttxpuJn5eFEH7uFfZR6hL//n4z3L2vpw201/+bMSEyVub/zagV
t8L/IfGvI2J9vS8xv4gWeNJ9Xc4Xyi8rzQgvs5Lz02ozVgyOOvOM8staM/rP
7i6r/zfDOeZozG/KPxjN0P17y/zfbEb9Xm7WSyR/qxmWIRn8vmSG2nnSzYv2
839mJL+Unc84bsbgW63eJQWT/zfDcLwx4/9pYR8e4Vt6U34lzoyBzm/YvuLN
iFUXOnyd8qPnzag84Qzr70UzMrxOV6tI+YfLAm9afWX7uGrGhhdeRzOJvyWY
0Sugoaz/r9BXRWJQF/v5PzOOZAdx/8TbZgR18vp6j/j5XeE/hpXi8SWZsWxO
ZuVttL7JZvzbLuvf/tCM8x2m5Y2i+uEUoQ+1+vH6pwr5XFsaUpvyd2lm7L0w
jfX3mRm96yv04yg+fS7wp+0+Wfwv/IX/1PIS6UeGGcVPye5PzTTDbWqhRF+y
7yyxPqMKyc7/mXGvT4tFJQifsgU+3xrE/P+jwGOH5t7riD99NmPlybpsn18F
Pg8e/XYJ8f8cM3avH8L76z+EPmVf+HmT+H+u8He9Tsru9xR4fs/zzC3ix3lC
Hs+/8f5Ivhlpmxc0ciT/U2CGfvsuWf9/CxqfPao+R/pdxILJtb34eTELltaI
q1ye4jsHC2pl5TF+lBTvN8qf05j8S2kLPHa/5fV1tOBFoTU9w0j/nSw4cU7W
/95ZvN93v6cn1T9WsGDKdFfWLxcL2qgrJkRT/UNlCw5Xqs3472pBcMHRGafp
+24WvPWeyuN3t+DJ+qYHu9n7/1rwMFzW/7mW+LvYiPnTKX7ysGB43ALGL08L
to28EtmN7KeeBZUcZefnvSxQdyj/sQH554YW1BsXxee/G1twfMFzx1FkH97i
+x+ucfzXzILd41tot9L8Woj5fbnH/rWVBSF9P/nOpv0HHwvOzzshq/+zIGNH
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
J2H7zVWMv3oxvz6JzadSfGGQcKqJie3DKKF5rflbnSm+NInvdSg+j+Mr4S+d
kn5PpPoUi9CnvUV5flYJN58qOyvJfm3C/nIcGV8k4e8P73WZSvujMUJe8Y3Y
vmMlOPy3JaUpxdfHBL94ny6rzxbf61Lnh5rW54SEIi0fc/3HSQmLY893nkX9
w04Jf+Kaw98/LebfvOrTFt//9/yMwB/rOZ5/nPD/5+7P70f5hbPC/mr+Zn4Q
L0FVZXfXBMK3cxK6bvJg/T4vYc5tJM6m+OWChOmvrnN+8aKEnwuu78un/dFL
Ev7r9orx5bLg7y+6Xur//H/Pr0iodD+X/dtVMf5S+Q8+U3x3TfCDIx+4filB
wrkRR35nUP7kugTFmVTmb4kC/550H7SF5HtD8JNuVXj8NyW8fhQVtJjs75aE
5KilnF+8Lfi/bdHEKsRv7kjwP+HB/u3u/8vXx09H+1P3RPzifJ3PNyUJvjA5
PCue9OO+wO9Z53h+yRIWPT94uSbx4wfCf30ycf3VQzG/RX3feFB+65GQ56Ng
Hn+KwEOfxYsWEX9+LPDs4FuOf1Ml9Dd8qvOY4vsngq9eq837B2mCX/f2z19D
/u+pwHNlYVl9u7CHGZm7WhI/TRf60+szy/+54MdZ16aspPzACwmltU6y/W/B
V0+Wyc0k/XklwTq3NMsvQ6xPhdFjPpH/eS34gs89ru/LlCA5NUuaTvH1Gwl5
pga8vlnCf3W7WmEr6ddbCY1uyPoLvxPjefP5zkEa33uBp90sjC/Zwn4WjZ2w
nOLDDxIWDhnN9vNRxCejdxQ0Jv77Sfi3wBP8/LOIXyP3reg69X/Pvwh+e/+6
7PydhCOf8T2f9OebhLTfNZhf5Uh4dWTzF/v9Pt8F/zsv8fs/RHzZ9MiEElSf
95+ESw2ceH1yJeTMe3ZVSfHRTwntgv5x/v2X4HvtVrSfQM9/i/i0q4xf50lw
6fDJaxPZzx9h311W8PrkC399euexHNKfv4JvTPRm/1Eg9CNVGVKd9POfiHfa
G9l/FopBzKmaCTXJ/xWOwcHkALavIjHoqus7yl4/VTRGxIcVeH2KxeBj9cHe
jhSfF4/Bv42y/INDDPxKla04j56XiEGx5bsZ/0vGwPXkrfR15D9LxUAVIlu/
0jEosV03qSnx+zIx2K58K6sviMGYMoXqTKf+C2Vj8Ean5u87xSDwzNAGSvIf
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
/2sq+Ns0nSP/J38OuHiqJ49PLQX6tCOO/J/6F3ys6A2+X60O2aur7lgfqmB5
18gBExm/9RQ0mj1W8FtfwZHag5Q/HD8aKJh087C0v6GCJ6kHjtjM32+k4NtV
T8kPGivYuOTT+CR8fncTBQVHPnTk/wq0CkFf0zP+mylQYhz3jzUnfhs+QDd4
fi1IQc1h/znun1LwK/XPBo3d+b+CXGWqyvi2Irzm+9s2mtcftlbwp36w434q
ev/nO3U2ML+2JTz3rS32bUftD2od+pzz3/Y0fj1yC76CFZypWGT+fdafHcg/
59cQ/HRUkOA5YPoknt/spOBpdGrH+VYK+ifdcHUJ82cXBQ18Wwi/dKXx7uT7
Ywb3rxv9/+8Xjv0vCsb/Cl6zlOcPe9D4XVot/e+pwLfvzOxLef6hl4Kupw4I
Pnsr8HoSMXk51/f6ULwodkTaH6JgW8Td7cl4/VSoggnvRwo/9KX2fd+TaxzP
7/Sj9pRJ5Zj/V5Am7Px+hfX3AMLrlXDH/hoFFwOKJRzm+vcget9nx/mSgwm/
+UZdmcf5+xAF1ys56vtDyR/H7fBPx/w3jPhwWQXxz+EKqg4vkXQL5xf/KXhr
rRD8jyB+Wf1zq8H10ZEKInaekfENI/uMr/5tIsfPUQoiQ3xFn49WsD9u3KON
3P4xCi6n6y34GqvgysUj0aN4/nWcgnBrr9hvPPHlsptFs/H7JyhYET9R3j9R
oXzy9MQ3HD8mKRiz8JPj/A8FR2d430jJ4zeFvu89Rc6/mErx2jdd3jasz6cp
KNlqrSP/J396myzawz3/T/7ycqrkRzMJ/8tK3DvA66/Cqf9BPyU+zlLgfyr/
u2rcvtkK/Fr+lufnKPjxU08ayvidS/Hm+UZZHzdPwcnRY+Ym5fNT5is4/baH
4HeBgvKn1leL5vx6oYK2lRuI/RYRHot+GTSK568XK+gyuYrwxxIFB7pMHTiI
7btUgdX1neRnEQoqf/cZX5b3Hy2j8eg7RM5XW64gb++dQTH8+wqKz+sV0Xcr
6e9FVd9sY32zSsEO3z2iL1cr+Nrly7pV3L81xHfPXzrWNytYOG7hH/f+8XWk
V040l/FdryBHePw+9/zdBgUeAwzH+afkP8/8x11xz/8rqF+/lfR/s4IiVxLH
dOLfIxW0dvWV/HyLgsmdqnpUY/20leLjy/1i/20KHi4dVtW9fmc7xef5VRzn
pyuo+Elp9pn7v1NBoWX3hF92kd5SS7Xx5PrzbgXdn+xz5P8KHsf+OA3WD3sV
zGk6Qvx3n4LN9xddz87xZ7+CWe+LC/4OUPvzlUn4x/hwEV9VSi34VohvP61s
OYnrc6oCO+qdvF9TMH9wQb8KrB904r8OG8R+Btm/Qf677Ti/MhX8W3ZS8GfR
eNy9O70K61eb+KD4EmlflIK0z8pcScf15YOEt8l9RP8eUpA5fMbw1cwfh0nf
Zlgqzx8hvdntrE9y1n9HFWyNzSH2O0bx4N7bibcZP9EKatffLfH3OP1+yqdq
IOuvGAVbjnST+toJGt8bC17hE+f/pJ+6nhN9f0pBy+rR2jmuP55W4Dn6qvjH
GQU9dn5NVoT121mKN33eCr5i6XtH/yvegue3zxG/BowR/J9XMOj87OG3mV8u
KKi70LE+5SLxdfLGWeay/r5E/h6+RfL3ywrSbXq5JcY9/68g9dBWkj9dVXDp
vb3FfT/8NeKnrZkd59NRf7uVyniY5wduUHz5Nl/G56aCoGu93yawPrpF43Gk
u+jfOAVrckyp9pDzh9sUv3aHCf7uUP60uHOPOK4f3yW+Lf3Ocb6NgrB9kWue
cX08nvKXjJrw5336PeOuue77mR8Q/wfMFfs9JD0XniQ+J3//kYJayRznBz6m
/OXNf5kTWH88UeC6ukL46SnF1+d5ypXi9j1ToE69Ju9/Tvz2IHBdQX7/C+KT
Tz8F/y/Jf9eUCzQ5frwi/wobIfz4WkHUri9zx3H+9UbBjUlRgt+3FG/KLTCD
+P3vFHQcuVTiw3viw8XqglCeH/2gIM+98hKfPxKfpW3ZycX1m08KqiRvJ/37
rOBWZNkkscwvX6g9h/pI+74Sfvb1f3WW6wvfKD/N01vqL98VFPNqXX7QGM7/
FQwb08Jxfx/p98Qi65Nw/TOR+DFqtuifn4TvmdVDl7N9fhFfjq7jmP8nvNfZ
+c2T4+Mf0itXMsn7/xI/JN0z9BPPr/wj/XyineAniYpfBZ9HP2J+TKoiZSpH
fE6movIs79g4xm9yFb0vr3as/1fxaYDVovsgzv9VTJh5Xt6fSkXCpcdVsvP5
jalVFPSNEf5Po+L12fM/PT5w/q+iauuKgt90KrIe9QiczP1Pr6LMhnuO/YUq
lu41brnzu4wq5gTa8v1MKp4PmFgijPdfZlax6ERx0Y9ZVPg36XgPvL4qq4qO
cy9KfSQbtf/tEb+HHL+zq6jywTF/5KGibnD3ntPd+b+KPbPzCb5zqnhlhxS5
w/OjuVRsLXRdns+tIi6y1WUP9p88Kvpf6SD4zkt/b/LpOI79z1NFjY+NJD7m
U/E5wa/wD+b//CpCg2KFPwuo6J5y7JpGnB8WVFHPuCD5sZeKLD1ip+isvwup
KLt+kuC3sIr6t2r7jOL8qYiKxMn+ou+9yT5zI2p7Mb8UVXFtaR3JL4qp+JnO
s2Ml1gc+KgKN15Uk/1dRbUW7Tdnc+b+KcoG9xT/9VMybltA+OeuzEiqKlAiQ
50uqaDVt/rf4n5z/q7g9zXE/b2kVG+1CQxbz+poyKnpO06T9ZQkfoSE/KvH4
lVOR6uh70UflVQScWjayAvevgopn5+pL/a2iii07FwZsZH1WSUWpRZNk/Cur
CB55JGUR1k9VVIx5mVb41V/Fk9i2T3pxflNVRb9CgWL/aioa7ds1qjXrz+oq
HhRw1D8CVFRv1DO4Dts3UEXjglul/zWo/y18PxTn+ntNFTHRhuP8RxULzo4Y
tNyd/6tY6L1J9EttFTtK7jt2mPtXh/CwdpbjfEgVaWZ2nrOT89t6Kr5tTyn8
WV/FkXlr449x/aOBipXJGop/NlThGp3GVYLt00jFi+bzxf8bq8gX9e1sBY6/
TVS086wn/tNURY4387uv5vXfzVSkvjFb8t/mKtr4Jau5mvkvSMWAm9ckP2qh
Yvz7phs0jg8tyX+fxUn7W6l4E/s91wX2r9YqbI8bgs82KmbdPhx0lfvflvof
P1y+347w2rX9aYvjV3sar4RXYr9gFSXH5d3/geNHB/p+vbrivx1VTE1MuBKV
Zt//+7sT+fuU8o78n/gq0DNbZ35/FxXl6wULfrqqeHvPjq7P+rIb+Wfvp6LP
u6voO7Lehl1c3+pB462eF33Tk/g65ZnKnZkfe6kYMb2U4K83tX94/Lll7J99
VBSofVzWL4SouLviVsMN/HuoiuNTXwi++qoYVqtlaCzv/+9H/a8ZJvqpvwrP
V62HveD8ZYCKVTffS/wbSHxx+e5Njf1/EPUvVZDEz8EqOqd7NvsH6/MhKr5+
O+LYf0v+3upv0uS8Pm6YiqtVPgi/DlfxNDy4bBSv//xPxY91+WT+bAThy/be
VI1/H6ki+sFqGZ8w8o8qKeOr8PzMKBU5v94UfTRahVe97p1Hcn1iDMXPe+uF
38aqGPWmc8NS7B/jVEzetUP0zXgVY+cs9DjC8WEC8c2Fh9L/iSrOjzywqj2P
7yQVXT58EP+arCJi59FkJfj3KSpydb4i4zNVRYuHLWbG8PenqaiZd5D4x3Qa
vz01/zbj+ccZKmbM9xR+nEl4DbnxaQrnF+Eq7syLE/vPUrGv2pLrqzk+zSZ8
NbrhmP9X8dJ3l3cX1udzSY/c/Sf4naeicJssKSJ5/cB8FafKLBN9skCFtb7s
9AnMbwsJ31k8ZP5ykYrcCf7PZn7j/J/i2Zsf8vwS4sstNer7M/6XqihRrIvg
P4L46eSS1z04P1umYlmeYGnfchUtk5WPDeb4sYL8ddaJ8pL/qxj0YXvKM5wf
riJ+6ZPRMf9PfF9sdK0ozt/WEL91uS74X6sib8oV0ZU5f16nwvt2XsHvehVq
sSne1fn9G0gfrLnouP+M8N3zc+YNzG+bVOSpXVfwsVnF+85mhq0cfyIpfm6e
JPp3i4r7+5/6TuL641bSN9Uc6yO2qTAqpYy6z/6/nfTD0QaO81NVDN6eKjd4
/cVOFWYSx/mku1R0W77n3HCur+0mPbistth3D+nP+jFxdzl+7iX9uKKZI/8n
f86fq+9mPv9ov4oGS0zB9wHCR4Uv5nwePxfxfWAx6b+iYtyznOvT8Py3SvGi
vGP9gaaia4FZ3Xsyv+pk39QFpf0G6asW2XL+x/UtU0US44/YzyJ+8ngY5c3z
77aK+XNbCf6jVGSIrmVEsD47qKLQZYc+OUT4SPp102P238Pkv5nPSf+PqPjo
k2FtRY4vR1XMPFpR9PMxFcnT5QvIxb9Hqwg6MkfmD46TflhXrldurj/GUPy6
nFrG94SKkHF9oh9w/06qWNzFcT/dKRXLH+0/a7P+Oq3Ct+8t4Y8zKtYl7xxe
lu8POqtie2x24c9Y4uc9C761Zv15jvyv6hvH/fKkpy61927F+cuF/+nnQjJ+
F0lvzH0Td4jrm5dU7JwbKvrnsoovPjluPmB9cYXidbM2og+vqjibY/qW4hzf
r6k4nKeg5O/XSd/mzbD0BM/v3iA922qq1A9ukl5sUjTSZvzcUnG0xBvRP3Eq
ard73/I7z8/cJj06sazEvzvE19Wzz6nE+usu6Tuzg/DnPdIHlRJKufePx6tI
4coq+u++imz5Fi0vx+vfHlA8qhbvOP+W4kuqlmO6Mr8+UvFv6DfH+n/KX/x3
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
+uzFdOE3jfRGztAs+z5z/q8h7u8C4QdDQ7O3r9Im8vtNGt8JntI+i/Cv1C8Z
yvaxic+Cx4p9okjvtXt0dgm3/6CGKpGO9WOHNCjmo5RrWF8f1nAs61Kx/xHi
o3qXuo/n+HVUg09BW75/TMOE9/laneP8M5r0qOUn/TtO+YBxv3Jbnn+LoXhT
X5X4eELDrWKxygrO/06S/hvv4K9ThI/PXZK8ZP49Tf718q74xxmyn8e7Ke7z
yc5SPO+6VvgpVkNwfv1GO8bnOQ0xyx37787T+O1pcCaS6zcXNPQvvFn0+0WK
9x/f4zTXly5pGF7okIzPZQ1nV064+Zv58wrxy5B2wq9XyX/9Ks97y/rymoYr
W38K/1wnfdn4XZ567v3/GhJKZZH339TQIcfyJC4+X+gW8c3tIqLP4sjfZnpd
HsDjd5u+n7+jxO87Gpa/bnDzHucPdzUkz+2In/dID2aef2wV54fxGl5FrBD+
uE/xOJd+swjPbz/QUC5ks+RPD0l/TOkWP809/0/jV6m0zD88Jnx+rTt3Nb//
CeEtuLzwz1MNWmefTV8ZX880dJvcVcbvOcWXlKm3LWF8v6DxzPHAcX6uhg1Z
qo6LYX58RXrq6gbx79cUX8qtG7ec86s3hM++CwW/bzVMypxl3nOOb+9Ib3x2
+M97ijda/nxx/P4PpD+WPXPk/xqaL87+9xrr00/U/6JXZf3LZ4qvTd4ELuD5
4y8aXnoWEvx/pXg9JNWHUNYv34hvdp6U+tJ30hv6hW6j2T9+UL6TpKfYN4HG
M3Fn4dwcfxLJP3ueFv75qWHprb01L7H//yJ9euaNY/0/8dXTNSOW8vqZP/S9
iX7y/F8NR1bVK5WX+eufhgutm4o+TqLj47r7J2Zx/pJUx+hL1xzr/3U0yNQ5
tqE7/9ehZungmP/XUTp+4rRnPD+eUkeuyGrCH6l0JGS8UzmC+S+1jqCjFRzn
B9PzwweNCWV9kFZH9ku/BF/pdJQdU8ajIMe/9DoaXVsv9s+gY0BI7iPjGZ8Z
dUx4Nknym0z0/PprxXe5838dn9r3k/5l0XG8WJ/Vabi+mlWHb+k8Mv7ZdMyd
5B35ip/PrqNmgL/034Pas+vAh7d8PlYOHVWKRQp/5NSxKmBJQBDX/3LpyBz2
WeJ/bh1+Ddqqwfz+PPQ9n0OC37w6/lwKLHaW50c8dYQ0qOi430hHxIM3R2NY
f+TXUep6X/HvAjoaDw1O15v1QUEdp0u8F/t66UhTf1zzT1xfLaTj0fVk4n+F
dRx6vNXfk+1bRMerFe/l+946nlY6ejiK60dFdVwLTO1Y/6/j5cQWc0JZ3/jo
yNSmuGP/v45a/iOHpuP8vriOPn/niv7w05Elm7EqPe+/LKEjPGycjG9JHSeX
RIUNcuf/Om787SfjU1rHjvs9O3/m/LWMjqZlb4p/ltXh73uu9F1eP1ZOR6HQ
P8Lv5XXsTPfj60Ne311Bx4GWUx3z/zpmFnn7fjDbv5KO5Fv+SH28so7ePWNd
71k/VqH+T3oiz/uTv1Xfd/Sge/5fx9nriTJ+1XRcKdXj6H3WP9V13FrwQfgr
QMf1Y42/dWT7Bup4tv6Y8G8NHZ2VfNsHc/5UU8ff6C7Cv9DxJH7NsOu8vqeW
jlNePcR/a+u4Y5y1XzF/1tGRaqoq5xvV1XHm3Mo1P3j/Qj0dGU7scqz/1/G8
c45p7fn5BvT9SXUF/w3p/2+uOT6M62uNdCwtsF/27zQm+/uM7ua+n6YJ8ZUd
J/zZVMfQiNh7W7j+0UyHVfuL5B/NiX98Q3L35Pw5SMeUXI75mRY6lIWx+Xpz
ftVSx+JmVSR/akV81KRd3hDGf2sdPi1TiH+3ofH4t7vFCY5PbcmfIqJkf3U7
HZt2BkTtZf9vr+NbTcf5P8H0/3W8Hjdgfuyg43Xxy478X0eb/Ke6u+cHOulo
clcTfdVZx7pyryPqcX2vC+GzWrjwR1filyfJb7nvX+tG43G1k+CnO/lzjQ7x
6zn/7KEjde7ZjvP/dPTXFpWO4f71IjxGbXOs/9fxbtaP5MV4fUUf8se1cwR/
IToG1zMC/BjfoTpa6y2Ef/vqqNtjbcPqzB/9dNzf4pjf6E982rVrUGeODwN0
jMzSzrH/X0cHM3p+Fe7fIB0Hx48Rfhiso/CX8esszs+H0Pid7Sz6aqiO2WVC
x6xgfhhGfxdqJPgYrmNNzfTPM7D//adjzt3kwn8jiP/6Ht1Wwj3/T+2rd0vi
U5iOAj1S3y7C9dNR1P+kG2R+f7SO7n9ynV7D+0vH6Ni6rJJj/l9Huvyl39/h
9TvjdDSv5BL7jif/sEbUHM/6Y4KOkgWyC79N1JF/6Louu3h+bRLhL8978f/J
Onp8HjB+N8eHKTqWZXecHzZVR/XaOTa67/eeRvZp81bwNV3H45Z3CjdlfTRD
x3fPn1KfnKljxfUcr/9wfAvXofVoI/pjlo7hUxL/+8D1sdkUb/o57m+Yo6Pl
8DnRr3j/01yKb+FVhD/m6UgcM+TBb/bP+cQfA96L/y4gvmq28eYkzg8W6nix
2RR8LKJ4/+KTcYHro4vJXwsVFfst0bGw6+rhA3j9yFIdg843kvgYQf9/7fff
3Xx/1zKK12W7Cz6X69g2RfuUif1nBY3nwnUS/1bqOPdsd8fiHH9W6bg3uq7o
+9U6KudP1/cAz++u0TEky27hh7U6iqz570BFrn+s01H86GbH+n8dW5oszLKQ
9fcG0g+p0wl+N9L4+l069YDfv0nHjHGWxK/NxO+vrq87xuvzIik+qTXk/O0t
5N9654FHOL5tJf7Qakr83aaj17VsARt4fLbT+Lb/I/bdQXy3+NvnqqzvdtL3
lzjW5+zSkafgxquHmV926/hR55Pgb4+Ohy6v+KYcn/cSn0TXE/7fp6O29r2w
+/6J/eTPgy9J/nVAx/LxP+7fYv506Wjo20fil0LxYNeoPQU4f1TJ3lUd+xM1
8t8RN1P/5vxY11Ehr+P+P4P4Is3qD805/prkX5MyOs7/I/5YemLHQOZ/m+x3
Icyx/l9HjoNNX7Zi/zhIemlKjIzvIR2z3h7bcp/967COLp9eC78f0RHfQMtQ
mvF9VEe3BXelvnaM9MrKZmuzuef/Kf5rjvMPj+to57U/7V2ur8RQ/KkwVvKv
EzrqzOsy1n1+6EkdX/KnF/udovEbsjzxuDv/19G10XTH/bHkHzNbfDzH8fss
6cXUg8W/Ykkf1CzZqz/zzzkdVdelFP85T/7fqUf4dsb3BdJzFxsJvi8SvmNf
Dm7L/btE/hyeSfTlZcJvmS1B51i/X6F48sfBP1d1xC0dXyRTGOf/FA8LREn8
vq7j6r4Hy0N5fuiGjpg/32T8burouLtk2TRs/1uE79y9BD9xOh5sO7/sIK8/
uK2jRerGjvP/yL5fGj7Ixv5zl+LL4c2iH+/p+HwzNOk/nr+J17H+VmbJr+7T
8z1/nU/F/X9A8fFaEfGfh8TnffOsOMH69ZGObO/bif56rOO2HvKjCevzJ/T9
s477v56S/vxbYKAn4/OZju1fusr9Kc91jE/smUXl+PBCh9emhtK+l4TfMZnq
LuD2vSJ9Zv8n4/ua4tPrwRdLMf++ITyf7yX891bH5sQmmzNyfvuO8q1sRcS+
74lPh36q6MP2+0B/L7kg/PyR/KHt03vNub78SUdgQqRj/l9H8KJCsanZv79Q
PlziP3n/Vx0r73z/G8PnB3zTUaLWA9GH33V4x9VcNIef/0H6aUa84CeB8o2O
Pc4Ec/6dSHx5eZDw/0+Kf+t/ldjK82O/dByufUrs95v0r13CaxPnb3/IX7cF
i/3+Uj419/k3X7bvPx0ZJw4RfCcx4FGpcb5H7D9JDYT595f6YTID20fV2+3L
/JLcwLR7jvtrUxio0aHqA/f9VykNHL2XXPK/VAbwOXPy3Vy/Sm3gS85oeX8a
A4GFWtTOwf6f1sCmkh6O/f8GbuoZB0Szf6Q3UDZrSsf5/waGnc4yJIrfn9HA
tXDH+eOZDOyOPVJ4LOcXmQ3cS/Vc/CuLgX7rz+bLz/opq4EBnSH3W2Uz8KTZ
idw/GF/ZqT8FgiQ+eRionrT/+RD2jxwGlvVJI/yY00CtvWV/F+H5pVwGQqYv
k/7nNtC52tAMIxh/eQxk0V2O9f8GYqLrtO/G/u1p4A0WOe43MrA27qSZgvGV
38DLwhfF/gUMDBzzYf0N9/y/gWZb6srzXgY+xMXm/cPxvZCBkydSi/0LG/Dr
erNVHeb/IgbS5tkk+smb8HB42De3/itqYHGZjRJ/ixmIqPNpuR+vD/QxMH/L
Bsf9yYSfDcqBC8yfxQlvvc/I+/0MFN37ZUAn9o8SBhodLyLxo6SBjCUKBDZ1
n/9vwFAGy/xdaQN/Gxe7V4bjTxkDncKuS324rIH7e8dGzuD8sJyBXj+6i3+U
N5DPc6DPeK7fVjCwIcd10TcVDdTNvK/1K17fVsnAthJ9xT8rG5icvPeZfLw/
roqBVp99pf/+Bj4mT3/xGOcHVWn8BjvOJ6xmIM3N6I81eP6lOrVn68YRkv8b
aJktaGUY56+B5D+3agm+ahgIeNq5dBOub9c00PdXL3k/DNy4+aZMPNu/loEi
x0tIfKltoHvu+6HFWB/WMbDmGCQ+1zXw+Vb1CX/d5/+TfZt/FfvUp/avzXSu
OueXDQxkvl9J/K+hgfT5y7wK5POXGxnQF++V+N3YwOULxfzCmf+a0Pt/33Gc
/28gbvvERtU4fjUzkLVPU/m9uYEXet51oVz/DiL87Z4j8auFAVUpNO8d81tL
A7OvnZT8r5WB6+s73C7C9mltoEqWbcIvbQyU25LxoB/Pf7Ylf8i+upzk/wYW
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
8k7u9f9k/08Rwh++JuZM+FjyD++fKW7izqyFjv3/ZK+mba8lZXyVMLG9wxbh
15Im0t5P2+YX1/9LmSg95I/Yr7SJMbeu2+fZv8uYGPKtouQHZen7+TpuL8L8
Xs5EdNaZor/Km+hSqX3FLKx/Kpi4MbGMtL+iCSV39QqbOb5VMhF/6K/Uvyub
uN/t64plvL+5Co3PC0f+528id2LpGp05Plclfzh5Qfi5mkn68U+zV1w/rm6i
2Mzj0v8AE0UG5driyf4VaGKa2shx/j/5y83Q4evc5//R752qSP9g4nzssYAv
/P1a1P/A1GL/2iaCC6V8E+qe/zexZ8xjwXddsk+S6WGPeX9gPcLrznUSP+qb
GPesZsMFzM8NTLy1ssnvDam/a1Z0n8P4bUR8oi8R/21sosGFOM3uyfm/idOe
QyR/a0p4CE279j3zezPC458x4t/NTeQ536HcC16fGmTiWo27Eh9bmFiVkPLn
fv69pYkjNXfJ861MHHQN+dyb+bU14Xdbbcf5/yZ+XSy0YRHPz7Y1MSNJecf6
fxMNF00dsZ7rB+1NBEakkd+Dia980mx/yPq+g4nsVYaJfTqamFnt2peZ7vX/
JlKYN2X8O5vwSHx48QHXt7uYOJE0k+i3riZGFq9Q5TTXr7oR3vKnkvjbnfpf
IFufk4yPHiZKvR4g8aWniRXpRn+ex/OvvUyky19Jxqe3ie92aFAi+28fE+tK
5xP/DzHR/Em+3M2Zv0NN6L095Pe+Jh7ejfFfzfl7PxOLNySIffqbmPB2sl8p
nh8fYCKy9AjRlwNNeCe9UO4E3+8zyMSu4DaSXw028Sl5WPqMHL+GEH7N+qLf
hhK++807N4X9exjxw8lox/l/Jn4kdNhQ/xXn/4S3POVEP4wwccbLb/on9v+R
hO+VwwRfYRRfOl5+P5rrw6NMaCfOO/J/E2dvxW1Iy/pwDPFdlwti/7EmetbJ
HTKI/WeciSWNfzvO/zMREl5w4Cqe35xgwp4Bsc9EEx8DrmzZx/4xican0Cap
f0428TRL5mKLWL9OMbHwuWN+ZCrFv+BO5+a65/9NzHv9RfKr6Sa+7vWY9ZDn
n2fQeDzfL9+faWJbsnDPylyfCic8nkuU988yUfVpr1j3/Z2zTQydv8wx/0/8
1SG2yWD+fS7xiV834ad5Jq6UuX3oB8ff+SbalnCs31pA+uPr8A4/OL4uNFHy
cBrH/eMmKvZJFfWL9dFiit8z3wh/LzHROb5pz76Mj6X0/KqbEj8jqL8fZwxy
3x+wzERQ61SiT5fT95Ou3JuC61cryD/nKvL8ShONkgQl+8v4WEV6YGNy4bfV
1P+n/2qk5OfXmMjytJrE57UmxobUPdKe9cU60msVTMf6fxNrprRYVoz5Y4OJ
RyeaCX42Uv8nlO3syfFxk4kFewMd+T+1p8rjaz7MH5EmXHnziX22mMgZWcUv
E9c/txI/bkku9ZFtJt5FX1oWzvWv7SYyxq8SfOwwoVaeV6ET8+tOE0kLtxf+
3UX2S5I3+wHO33ab8MlvS/62x0TTtslLBHF9ay/xWd8V0r59xP8PsTUb18/2
0++tYoU/DxCelizTi3P+5yL7PHou/q+Qfvve/91m1jeqibkrn4n9NBM7d7+q
vonXz+km6qXaKf5lEP7bBeQL5PqHSXx6d5G036L2jHhRM47r+zbph6m1Zfyj
KP6vat7Pm+vfB6l9r9I57v8j/Z7+zcinXD86bGJ0YjHH+n8TOzyun5zK/n+U
4g/5k+T/JgbF+vr+Yf0dbeLk+o3S/uPEP4cqJp/O9a8YEyVaHXOs/zcxZX9c
ikzM3ydJL45OcJz/R3rj24hHC7j/p02sr+8r/nnGxPgF7z9Hus//J37tlNYx
/0/xf9nQctO5/neO+DyNY37xvInuZUcVzs/x7wK1d79j/chFGr8FhVY24/5d
onj18Y3kH5dN/Ks45vV+5vcrFH8q/if196smqj2dfvsM8+81iuf2F/Hv69Sf
iORrN7P/3TAxsMdksd9N4tc1SlA5zs9vEX5DSkn8izMxKsCumZ7j020Tl6xx
jvl/E6keVejTn+/XuUt83OOdY/6f8q1fkWuy8vxPPOnh3rkc+/9Jf/83KXYB
148emGifdaX430MT6a/nrLSD/eORibIbE0QfPDZheR1pf4L9+wnFx9CMwi9P
Se8nbfSkLuf3z0hf7Hgm8wPPKZ9JeSpDBMfnF8QfVgbxv5cU724/8zzI9ntF
/cu4w3H+v4kBv16fmsT2eWOi4AnH+dJvTXwOqjxpK/fvHemnZLPFfu8JP3Nj
pvdgfv1A+v3zC2n/RxO/T6cs4z6/4xONT53LjvP/TezL3naIJ8efL5TvFfZ1
nP9vYv+ssR9TMH99I/2UMpnY9zvZL8PQlb5svx8mhp1oLP1LIP47/XF1ffaf
RBOVktZ05P+ULzf43cXlzv9JX4b0Ev7/TeO5IsEzH9cn/lA8DnasP/xroua2
h6lXsH3+kZ59VlrGN4mFEreMHY25/pfUQrqB36X/ySxEVf1X6BHrt+QWyoRM
lPansFAyzcC9ezg/SGnhv3R7HPP/Fgo8i8zsz/W71BZ2PFsq/p/GwqIfW9uW
5vwrrYUhkx+LvkhnYdy+9fENOb9Pb+FN/mZSX8hgoe62DyFfeX4no4Wcu6tI
/MlkodKB/Sf6c/0/s4WVhecJ/rJYGJY2Yzn3+eZZLXy4XkTq49ks7N7iu2A3
x/fsFhZ4adI+DwtTy97ZMJnnv3LQ8/5LZPxyUvv7dhhS273/34JrkJcj/7eQ
99af01N5fXAeCw/T9xT/zWvhQcaDVxM4f/e0cM3/hOAvn4Xcr+/NOcz19/wW
TmU0HOf/W2hdskIfX67vF7SQuoefxDcvCynO5+72jtdvF7IQHJhc+lfYwvat
Xk3LcnwpYuHW3DWO/f8WTlwM6/2Xx7eohaCNvo75f2rv/U7l3zG/+FhI29ZP
9I+vhUi/J1O3sv4sbuFLWE+pX/lZODrl/rM6XH8oYWG9b2XpX0kL+ztEPVa4
vlDKQqr1Hxz7/y0cCezlM4n3f5exUDjshei/shbeY+A5P8Z3OQtjayjye3kL
1XPs7xDJ9fkKhP93l2X+r6KFzLOvJ9W5/lnJQo7uPwRflS0cz5W1U3qeH6pi
4cyK9cJP/tb/9kO3qcvzq1UtdDl5XMa/moXNg7/nzM/6vrqF8ikWiv8GWHh5
YOSOHO7z/wlvBV851v9b2FRyeZ5f/HtNep/3bvk+LMTXuNzpGuuLWhYO1Egt
/lnbQuW2lfK35/GpY6FWmSDBb10L6U/4B35g/qpnIdnZ/uI/9S3EnhpW04/9
s4GFuV8rOvb/E/4G3O93k/VJI+KfrCul/Y0tNCx2ON92tm8TC4Wu5pH40pT8
rX/RPAkcH5sRHhrUEf5pbuFH8G6fa1w/CbIwYPxdGZ8W9L0+QS8KM3+2tNBz
VZTgv5WFuAmXDixlfmttoZSaU/RDGwsx+38mbcX6oy3hPcJxP0E7C/vO1Vzx
kvHTnvB8rphj/b+Fvx2XfXnN+O1goV6FsaL/Olqo+ryqxx+Or51oPPNkF/t2
ttCv5ogzSTl/7ELfVxtJ/tTVgjqqyIRDrL+7EX7i2kr9oruFvV065VLd+/8t
PA1xnD/R08KqsU2T1mH79bJw9+fUfpL/W5i18OPCo+7830JiKk/hhxDqb3m1
xwaO76EWCjbJKvbra+F5WNkbdTg+9rPQ4P4+4ff+FhL2+1dsz/FpgIVqZfY7
5v+Jj8JG7fvXi/N/CzO1FRJ/B1tY6HPe+zPrvyGE/5nXxD5DLWSPaPTjgzv/
J/4bPUb2Rw+3cLHtpSdr2P/+s/BxaEbhzxEWvM3R49owfkdamP++irQ/zMKx
Iv0ifN33/1G8uJBT+GO0hd7TiwzswPPrY8heLR3ng4y1oEVW2JGNx2+chRU5
3or/j7fQuE21vTl4/mgCxZP1VwQfEy3sPPFufgTnv5OIf58elfg+2cKNoXdK
qlxfnkLxeHh14b+pFi7caZmvPOdH08j/mxeX56cTHz8p8fMM42+GhSbBkY79
/xaWVPx75injN9xC6a+24/w/0heXljU8wPiabeF09GFp/xwLoSWP1W/A66fm
Wnj8/b347zwLex7N3bCbzx+ab6HRvzCx7wILIzvMrlCS668Lif+7HRL7LaLx
P5eo3Gb+W2xhYHNHfFxiITpDl/nD2T+WWphQc7PElwiKL8G1M4QyfpaRPzd2
zC8tp/6luv/hIMfvFRba5nwg6zdWUnxIqWZrzvZZZeGfb7Q8v5rG4+XwuNV8
PtwaC7X9PjnW/1uomOrbk5UcP9ZZuH35pvDfegt5xlkZB3D9ZgON51PH+d4b
LWS9Msr12X3+P+m31Dcd5/9bmFzoWL5OjO9IC9a1SMk/tlD8Ppjy+znO77YS
n/o/Evtvs3Cvt59HK64/bLcwpkRWx/w/xdcJX6dX4vmZnRbC/d4Lf+4iPrKa
nBzP/rOb9E3ZUdK/PRbKTVGbJLrP/yd/rJVN+GefhZYprqTey/jfb2FxFkv8
/4CF/M8Wop77/D8Lza441jcrpNfsBfs1/l0l/mzs61j/b5Ee358pG+sTnfxB
SyntMyxshY/q3n9gWuiTx1Psb5G/9h3Rpi2Pj20hZZ9qYp8o0p85+o8+zfnj
QQs//10W+xwifbbolx3C+D9M+Cq6SPzviIUR58I/t+L85SjpxSQXhZ+OWWj6
aebztIzfaHqfl6fos+MW2s3PcMKD41sM+ce4cMf6fwuvjvsU7sn4O2nBb9NM
we8p+v42vfI9rh+ctpC8wQJZv3KG+PtDjfa9GH9nLXzq6ti/GEt4G/imU2rW
x+dIX33uI/WN86Sfgmt9y+/e/2+hQvlTwv8XSd91VFOndK//p3xhreN+z8sW
snR6Pip5G87/Kb+4Vk3af9WCnbVf8iiuj1+z0PmZv+DjuoVejw/7nuT33yC+
LeY4n+6mhcOts1cM4/NvbpHeyRAu+iWO8PugVd1kzA+3LRT5d0zwc4f4bMPY
/Pl4/uMujcfRhfL+e6Svwgq0Gc39jyf/bThI8HnfwoZiGfd15/roA8Lz6CaO
+X8Lf0puCrzH8fWRhcCFr+V8n8eUL3U9qKbh/PMJ5WeZpgt/PSW89nu6ZgvX
J59R/Gp3WvDznPgwZ7puRQdy/m+h/bgTUn96aWFOQ89xF5h/X1E+Wuie8Otr
yhdbreu6wn3+P+mR/3o41v8TP7Vrn/GHO/8ne58Il/jynsa7rutef55/+UD6
wrOO4OujBb1YzdKPGd+fiJ8uV5T84rMF/576tYfu/J/wtNoQ//pKv79502Lq
R87/SQ+dvC31y+8WZr+dHDaA61s/KJ5sfeaY/6f2VxxZ9SLrz0QLnX5VkfH9
Sf6Wc2xwDOPjF9lz03mJv78t/EqImtmJ/fePhdHn3jnO/7dwx65U/SfnH/+I
/wY9lf2pSWwYV1Ls19k+SW1kj3Ps30xmY6W35wd/xldyG43aPBL9msJG7uZe
VTNw/E5pY+KchuJ/qWxMP+lVYQXPz6a2kSX3Dslv0tjY+dG3xReeP0trw15X
SdqfzsaDCw+P3+PxSW/jaIGVwo8ZbAwo0n9bBvf9fzbKjl4h+jkT9edrk4u3
+f73zDZyrKgv/JHFRq/u+zqf4fiU1caEu9sd5//ZOLDh2NYpozj/t7G8xwyx
v4eN6/dv/efOP3PY2DqyvdQfctq4Na/P8y7MD7noezcc50PkttFm38wt1dl/
8tiYVqq08EteG93iawe5z6fxtNE6dIDwUz4bb6tVNFO4z/+30bDdevGfAja0
so8iHrI+K2gjV89e4n9eNial7vUmjvVjIRuxldvL/u7CNvz7+L95wusHi9j4
OdRxf5e3Da/VxqzdXL8paiPuwTfJL4rZ+FBg8t6yXD/3sfG3UJjwr6+NRU+S
Fc3C9itO7fkcKv7hZyOhTLnoz8y/JWw8LdHCkf/baN885YN3XD8vRfZeWVLs
V5r6712waEV+fxmyV8HVwg9lqb/Pf9/ayvs3y9nYPT3Mcf+fjaFNb/gN4fpB
BRsF4l1i/4o2gow1r/5yfaeSDXQcK/xb2cbrq3XTrOb9t1VsdK7+Q/zL30bJ
bf6Br93z/zZCe62R8alGePqx+Oxirl9VtxHQOlr0cYCNln+33ivP+WmgjeIJ
baR9NWzsvb50rBff71bTxqqTxeV32EjRuN3xKYyfWjbpnf3S/to2Dk96F36B
17/UsdF05XGxT10b+a6feOE+v76ejWNHdPHP+jbqVs5qV+b418DG3SyO+2ka
2ij839Lro7m+28hG5K9ZMn6NaXz+/LcpPc8/NyH8tRws/NDUxsOAjHlieH6q
mY2DZ0o48n8bX7XJVQ4wvwbReDVO61j/b2N28MY5nXj9QksbXdUa8nwrG0cq
D7n1htdXtLYxcOJP4a82Npb69cnbksenrY2zty8Iv7SzMX7gozUBfP9Qexuf
otvK88E2hq0/Wbyse/+/DZ95yWT8OxLfLM7VLsad/5M/Lckp/e9MzzfI3rgJ
6+Mu1P7F3o7z/21sikoXNI3zt25kn/a7HfP/NiZHHj0XzePTg8Y/30M/yf9t
3A8JVCpz/3vZWNZqvvhnbxufsxc43JXXX/axUanDFdmfEkL+sGnBvdnM36E2
dt0qKvqzr41rjUML9eXzO/rZWFzupujj/jZ8D2x/tJr5a4CNdCUnOPJ/4sd1
87wb8PqgQTayxncS/A62UfB8ulwKn+8+hPzhzmex71Abz9rFzI9hfAyzUcg/
QPavD6f/H+fqNZ/x/5+NxrN+Ou7/s7FtQLatOTm+j6R4eK+ptC+M4lm1ZQG/
2b9Hkb/eGyv4H22j6IayIYN4/foYG2v7fJT62lgbGcocqd+G68/jaHyGnXHk
/zQe8L9nsP9MIH670kr8c6KNGkNP/4tg+0+yUSt8r7RvMo1Ps+mrx7jv/7Mx
BI77zabaWLi93ZePHB+m0ft+pnfM/5N/FX7z0mR9MMNGnSw3Hff/EX9vH/W3
DfNvOPlP9HBH/m/j0B3/fl6M79nknwuai76aY+Pq0nwH4rg+MZf4aocm9e95
Nma0mbrmGNdv59vo0inMsf6f+PtJYudC7vl/G9ak2zJ+i2yMrpdqcT32j8XE
18euSH67xEZIv8i5ld3n/5HeqL1f9EUExfP7WU/NZ/25zEbKhPvif8uJ74ec
vrGV+WuFjSL7Mwq+Vv5vvIttO836bZWNHnFXRV+tJjwndlp8i+unayg+pE0v
/LKW9FmaoyjO8Wcd4fHefsHHeuLrPef6POP8bIONNV8+SvzZaCNK+VkqK+N/
E/n7yRvy+2aK/8kD9kW6838bGcPOCj622Gh1t/utUfz7Vht9oxzn924jvMa2
827L9eft5I9fHOdT76B4UOhwbrn/j/qTwnE+9S4bpXak7VSX8bWb9ENnxbH+
38bHvKXeevL8214bnWocEXzvs7H5iDqnNuNrv43wIw79csDGxpkfjYLcf5eN
X/PeCj8ppDfD+u+pw/pVtZF+wXkZf4349s/lKVW4fqlTfG3QWdZnG4Tfzgcr
dXfP/xMfp3zmyP9ttPD4b91Txq9NeijtYdHnUWSvZNdmPOT6+0EbK5Z5yfq7
Q4S/sjv35OX1B4dtpGka5sj/CX8p9nXdzvrrKH2/1WaJP8dI73RtlhjB+Iom
fL89L+N/3EZiX9eC78z/MaTXp94QfX/CxovSOT994vruSfpeqaaO/f82jnee
cDkb+9dp4tuZ5+X7Z2zcGP5waiDPX5+14bHil+AnlvCxqG1z9/km52z8t91x
/+t5G9XHNthUgfXHBRvVhj2S8bloI3XN3CWqcX3hEvGph+P+pcs2tlzOeq8x
9/8K9edJ3xKS/9uIGDb880CuL12j/KdMlPjvdRvD2yz5lp7Xp9ywERM2VPjv
po3TDz/mCGH83LIxJ2iV4DOO+LrLsJLvOX+6baPnV0uev2Oj4rmhkWkfc/5v
w3tiHsf6fxt53jxvXIT1bzzhL3O8Y/+/jSpfWv8Yzfz1wIZnn1GSXz4kfz2w
bf4DXl/3iPD8LInw32PKp1qm2DKX4+cTsl+fQWL/p6RH+0/+vJfjxzPi37uO
9WfPbYwpU8fcx/NDLyj+13Gsn3xpo1iZsd6VmD9e2fjX76nkX69t1NdjK7xg
/n5jY8eBmeK/b238DqkzIBXPD70jPbAtu+DnvY3LFd62c59/+cFG2/qLxT8+
Unyq7JWsIM9ffiJ8lh0p+dNn4p+Zs/228fh8sXE+S36pb3wl+63ZoNbi/avf
KN6nHCT7P79TfJ22Y8oA1qc/bKTNakt9NMFG5WWNny907/8n/360Vez300Zw
rxvnJvP+oV82Hu2v4sj/Kf59bXFzNH//D8WTqd7Sv78U3x4/nh/i3v9Penlc
R8FHkihk3hw3sxzH56RRKHjoiuRXyaJwscKfGp1ZXyaPwt+4eTL/kyIKyUZ0
zdmc41fKKNw9N1z4O1UUJs+PPBvC9bvU9HeP+Y77/6IQULxoG/f6pLRRiPmo
yfxDOvo9IZtvS9bP6aOAQ5fk/RmiMLZa+2bbGN8Zo2DdDxR8ZorCun4+60MY
H5np79vNxD5ZonClaoMytzh+ZI1CYvRBwVe2KPTd7rvuIfN79ijsb+zQPx5R
KP/kWLeVPH+TIwpeBe+J/shJ7dnZSevB8T9XFMw+9+X9uaPgXW/YoD88Pnmi
UDXfBPHvvFG4FrElfjX7p2cUxq0cL/3PF4VcIxqN/MXtzx+Fo36bRZ8XiELb
O+f/KmzfgvT+P0MEX15RGFZybP1I1oeFolC6yV/BZ2Eaz9GeViXOj4rQ+2e3
EX71jsL4llsn5ef6YtEoNPHwlPOrikWh/7lP/8fUdcf19H//7B1lZGRlh4yk
UBzxIdnZDZW9UkQk8k7KqkRkZisVJSN63/V+2zMjs2RGdgiR6He+j9/7dO6f
z8d9v+99jXOe53nO63Vft4kdjX87HG8hhON3ey0MP7jb8RX1v4MWdu1/w/Zn
ifer3rFTNapPdtTCpW+m7N+dtPCi5Tb3r6QPOmthptEA1fl/WuiUuu/hebre
RQte1ear8n8tOKQa5Q6h+nk3Lfy4oDr/ursWqt893+4cxTdrLcxNrMz1zx5a
qHOnRsx9yt9stOAZKTB/99TCsVU9b8+n+bPVwpZlOtafdlqwG+Bz5RXpk15a
qPLSkfVfby1UinVM8ab9JX3Qfp+rzkew14Lx3yu3JJp/B/Svw504f+irhUOP
KjrY0vz008LeChls/6AFqevltG6Uv/XXwgNzdx5/Ry2MWpz1bzqN/wAt+HTv
yvnnQC208b54yqVs/z+258dT/v8gLVw5kzFQQ/M7GJ/3uBmPv5MWzs0Jr7OH
9NEQLTSMq8Ptd0Z7u7opNIn07VAtFIx3VeX/Wti6oF7Lsv13w7UQlq7h+sgI
LaxteqNLAdXXRmqh6KQT+88oLZTraZ8RTPtfRuP9Nw7i+Oiihb7/vkZdp/x0
DNqP60DOP8ZqwdrzS5qe9P84LfQYPEa1/x/t5cyKAB86f2CCFhbHO/L9J2rh
i3FMdhHld5O08PXyLLZfVy1U1lV53pz2J7tp4XENe9X6vxYOOp4r+Uv7Iz2w
/x7jOD5M1sKKeUUjAqh+7onPmziBz2/30sLPK82Xl5B9eGsht8Ul5s8pOP81
Rw5IJH02VQsdmp9hfThNC9vyOuTPoPrxdC28a13K/DZDC2M953yxpvx0phaM
qtnz+scsLZxatWROT6pPz0Y+jOvP/DUHn58TF9+L9ONc/H+765z/zNNCcHrV
BjOJv3y0UFp/t+r9fy28jmq39SXl775aMFk+jeOLnxZit41pPJz05QK0h2+3
2f4WaiGlxZnw/vR9AX/kh1GVWL8u0sLT6u+7HyX+WKyF0T0t+XoA2veOJuer
U/66RAv5PcN4fJdivFj1aUhD4udALUxJsuHry3C8O7Q9+oTyoyAtrKlfn+1n
OV6vmhbkS/WnFVr49aUc66tgLbzU/TR+R+ejrNTCqtBBfF2D8aDCsyV3yr7/
p4XDZptU5/9pIe2h86nfND+haG9mHsxfq9Ef8htcDiJ9G6aFo5NX8/yEI99t
HGF+ivq3RgsDjGey/a7VwoxlNtY2xC/rkO+cpnL8Wa+FA1KjHE+yvw0YP16M
ZPuKwHi67VHzRcQfkdge82usX6Owf42CE2rQ/zdqwblKFsfXaC0Mqnnz7RQa
v004Xp9/cf83ayFgQIVbrel6jBY2XQxXnf+H/e0rJNlTfr1VC/3ORrD9xCJf
x1wcU4v05zYthNd9y/y+XQv/Rb+q94DGfwfyr6VKn+9EPuwU4r6L9NUutOfr
1VT5vxYiv11+/ZnqM3EYz9e9UL3/r4VF1om240h/7sV4UFXm9b19qKdMvWpO
GEn5P/a/2h3W3wfw/31HOtvR+vNB5IdWJzj+H9LCq883qk2h+HNYCzbP+3F8
isf5+BqQc5fyowQtDHbZxvZzRAt+EcGPU2j9LxH1hkcRj18S8nVEnIMz5RfJ
2P8PNTi+HtXCet9c/95l6//IPy5nVOf/aWFSesAhNxrfVOSP2i85/zqO4zvm
fVw48Xca2petGeuLE2i/U++nVST9dlIL1frns/4/pYVm92Kc1pN9n9ZCzIE2
3L50Laxr9mRyN6p/nEF9M6WR6v1/LWxeZL2iGr1/lqGFb5G7Vev/yD/X0qVk
qg8IWjiRb6/6/p8WTuZFxN+k9QVJC12cv7D9yqhPB9aLfUzzoyB/adcy/+mQ
Lw46tYog/9Fr4Wbdr+xf5zB+P1QCben9nvMY35eVqPJ/5KOtGotXZfm/Fj48
CuL5vaSFYR2tZwrEz5fRvo/0UH3/TwtLH9R6I5K+uYr6NmMQ//8a6qMuNuFh
lB9d10LhoiWq8/9w/I647Cg/jPJ/bF8VM9bfmVpIH7Owkr5s/R/9zSGc5+82
2m+HZZ/Pkf66g/6Ttofz+7vI76UB4z9R/SUL7fd5Pvf/HvL5gRffCoi/7muh
vuaUav8/6sv7nd5eoPz1Ic5nTVvV9/+0EN12+ZNxtP7yWAse60xYP2RjfGze
wduC4msO6qfyoaxfniAfJYwqgrLz/7VQsdcGrm881cL3NZskZ5qfZ1q4tt1C
df6/FuKHb75oTvtTXmD82f9I9f4/+sfRPr4lpL9eIV/v9Wf+zsP+iQ0bnKP6
yWvky3bWPP5vtOAb5zNqGJ1Pko/+ub4N899bHD+HDCWA+vcO/fupPcfv98jP
FbzDYmn/wQecLzOB+ecj5mcOTydVo/j9CfPFltM5v/2M/uFdIboO1b8KtFCj
5hUevy9of/7bra6T/37F9gZU5f2P33A8poQe+kDxrxD1htEi5t/vWrjbuN32
ULKfH6g3L1bi+uFP5L+ME4e+kL4r0kKtHoPYP39hPhPZS5xM9vlbC40mblHt
/9fCk6v6Xzl0/Y8WAltf5vyjBPlTXLil7HzYv5i/L1atX/1DPdopO+U68Ucp
xp8X9dh/jASIbdApRaDxKydATuAVto/yAvQvHeZcldYXKwiQlbqY+bWiAF5G
7tmbiN8qCSDVTuT5rSxA2p3tXUJo/1oVAdZHd2b7rCqAg8/evFe0v6GaAAHv
+7I+rC6AONdtVROq39UQYFSXdvz8mgLsvlxqcZLqE7UEMO8RpTr/D+8nGrUJ
IX6vLYDR7aPc/zoCeDh+mLCS8hcTAdwdfvH8mQpQeVX8yudl+/8FODp7O+un
egLY9R/Z1pXiT30BPvZozvbbQIDGrgedtlF8NhOg9qwInt+GAjx56hy3smz9
X4Cmqwr4fN3GAsyefH+vY9n5/wLU2r5Gdf6/AA9ahkyaTPq9qQDH9GfZPpsJ
oNM/rbKZ1s+bC5Bp1IXHrwXOb7+OxuWI31oKsCK2OccXCwFWz591pyPFj1YC
HGnynfVPawH2OS28m0L1lzYCbDvznPVXWwH2H361ch/l3+0EMK3fgJ/fXoDT
D7afL3v/pIMAx8/UYn61FOCRW8LfYMpvOgqw8uxsVf4vQMGbbifKUf2+swBv
Dpmw/rESYHu81qIF7U/uIoDLnhz+f1cBNve6mpNP+q6bACMHPOL6VncBwr5c
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
hJxmplEHqH5USYTrGyPZvyuLsCDzyeAmlJ9XEWHux8rsv1VFqLDsl9d4un81
EapFdeT4Vl0Ex7b7RpZ9/7KGCIHfxqvO/xOhqpX17rL3j2uJkPpJVf8wFsGl
reOAIVQ/rC2Cj10+P7+OCBbCpi0tKf6ZiLD3bg8+/8NUBPMw47yXlH/WFSHE
0Yb5qZ4Ij2xfdzpP67/1RWjjYMb6vYEIBZf/mg4tO/9PhJ1nW3J8aSjC5kXF
o16QPmgkwuJ+e9i/GouQ+Tfw9UmKL01EuLB0FtuPuQg1nmXUWlOW/4twaPdC
Hv9mIlwd/9WvAr0f3VyE77CQ9y+0EOHbbJfkE6TvW4ow+34c25eFCHUTayx4
S/ldKxHyfx/l+NlahPaW/1bPIH5pI4Lv9TncvrYijK2637UJ5WftRGg5LJX5
sb0IJXv8lgyj+e8gwqYv//j+liJ8OWO8O4j+31GEth7fVef/i/DR2LGdD+nz
ziKkrd3I719Yob3oCvVV6f2cLiLkLcnm+NhVhHW6e87htP+lmwhff2cyf3YX
QWo79lc7qr9ZY/uHf2P76yGCw4pIfy+KjzYiJIxZrdr/L8KL+vu1dmT/tji/
9mZ83U6EjhV3/u1B+496iTCyYSzbR28RJiyxD9pO/NhHhHcLI1k/24sQ3brk
/i7SPw4idDi+mONTXxHWzsi86kj+3w/nZ0JL1fq/COHV37pWpPpqfxH6L1PV
7x1FuJ3uontB8zMA/2+qYf8aKMLk8G2vKxB//SfC5ykHuH+DRLDplFltFunD
wWjPiup8UycRdkydV+sj1Z+GiFBrvip/cMb5Gqo5GET6c6gI/Y6f5vgyTITB
46tWG0j8OxztI/40x9cRIvyZ7DV/DsWHkSKcxl5y/i/CmXlbPx2l+DxahDex
49g+XUTo3WHQlGKyvzEiWI0dzfw5VgS7u1st+5B/jxPhps0w1nfjRThV0/Jh
LOmjCfj79se4fxNF8A+qvtea2jdJhG1/VN8vcEX7sfHLOEj5qZsIRlde8vy4
i9BtWtaehvT+lAfy7bMDqvxfhFlrK9q3eE35vwj/3fnM/O0lQkOjqu+O0vqy
N8aDkHoc/6bg9Wbdb3Wn/k0VIdH/EfPzNBFMbhfWPk76YDq219qb2zdDhA/n
L7X2JH6cKcKoFZ35/7NEUJ58WxdP/jUb/WvKTR6/OSJcmWjzujXlx3NF6DJt
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
Mtzdozp/1ViGAw8ubi/bX1VbBvPtJ5m/6sgwp+Rt5BRafzCRoeqHOsyfpjLY
Tfs+wonyo7oy/A4q5fpXPRla+BUv7kT1gfoybIwOYPttIENSbtztaXS+k5kM
bwOe8/w2lKGoybCh32l+GslwLHcuz09jGUyEqma3KH9sIsOKPxM5fpvLYNvk
Tnw62WdTvK4c4PFrJsMF+W/uLmpfcxyfIhfOL1rI4FNv0NLisvP/ZFBuxHL7
LWQYNWbZrmiqD7SSISR9NPt3axk+T7f585rmtw32f+wEtr+2MvSM8I0ZSOu/
7XC+bpxi/mwvw/wtrXP2E391kOF19Tzmb0sZLmp2hzwm/d0R7al2deavTjJU
emtU8pa+f9BZhstr83h8rGSYtSFp62Z6fhccT/t33L6uMny6YZ41h+JbNxka
DQ1i++wuw/L1Cy++Jv1pLUPdhsmsf3rg81uPubGM7M9GhhMObTl+9ZShfNKI
+pMoftnKkP6wuWr9X4Yqx1dMmkX830uGbpaz2H57y/C06GG6hupTfXB8N6vW
J+1x/B+ktDhH8d9BhnurW7J995Xhl4vHaDua334ybLdUnZ8GMkyLcW5Y9v36
/jIMqftK9f6/DDeytq3bS/4xQIbps5eqzv/H8e4Td2cx6ZP/ZDiamMv3H4T9
u/1QfEHv1w+WYcFHa55fJ8T+s+Ep5fdDZPh+Mpz1gzPyw0ldoh3x41C8/+c4
Hr9hiO92cVpD+etwGRw8x/L66AgZchtLfUKo/jRSButJK3n9dpQM9VqH1lhE
+wNH43g8m8Pz7yLDPulj74ljKP/H9t0z4etjZWgftm/NU1ofGCdDuPKO9dl4
5Ku1V6tsJn6bIMO3hmFsPxNlGLgk72URvd8wCfnAsybzu6sMo78uyPtI++vc
ZGjmc061/i/DqsKsCdmkfz1k6HMom+1jsgwz2h1duo+e7ylDvPtttn8v5OO3
9nn5lL9643zeHMz8MUWGksKNQw+RPpgqQ7uM29y+aTJMTV7QLK5s/R/t1XMc
z98MGbzO9/40mvKXmTIEtL/G+e0snD/9/jwv8q/ZMnT83pDbPwfHO3XLt7Lz
0ebK8F+QwPpnngyb3TbPvl92/p8Mu3ss5PXh+TLopIV+a8vW/9H/r6nWZ/2Q
T6J+7E4hflwgQ1azr1wfWSjDzE299kZT+/xl2HK4Ol9fJINrv5Z1TKl+s1iG
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
/CYF9Y5p8bw/VP9KRX/1e8XtP67A2kttNtYifZKmwKysN6y/TmB/F4bcKNv/
fBLH97GFav8/8ufsbUa3iN9PI/+cylF9/w+vR7bdlUHx4wzqu5PbWJ+fRX4Q
j48uT/XxDNQLjVTvP2sxvtcKOOJP+58FBSalvmX7FJGPsgbtyqH8UEL7jTdi
fpQx/pw5tGJA2fo/6sfGM5h/dAo8lFwq1qTregWSdzRVnf+nwJXH9WfWI316
Hu35hy2vD19APRI0eakNnT94EfVeVZX/XlIgwSK9ow/tH7yM8XfbcY7/VxQ4
mTywUWOy76toj7OPMv9ew/j2fdLozxRfrqM+zHjN/nFDga4z3Y6OJf11U4F3
sEa1/1+B95FZzzNJn9xCfeCoen/4tgLR7f4LPkD9u4O/n6U6P/+uArU9Qo8d
IP/MUmDfAz+uL9xD/kn12FSB1q/uY/ytpXr//gH67xlzbVl95aECoTf78/g+
Qr1q9fVqRRr/xwo0CfzJ85eN+VSmg96U+C0H7XO5NY/PEwX8xcn9Ayh/zkV9
PbIFx4+nqOfD5NwLVP98poD1uYpcH3uO+ifh8klP0t8vFNh9IUZ1/p8CX4x+
Lexa9v0/1Gft/Hh88xRoEfdp3Wzyv9do7zbn2b7eKPDZrvhlGvU/H/Xa55Vs
328xXkQ8v5VF6w/vcL5bFvD4v1cgfJKxzT7KTz5g/zcfZf/+iPndqcCUtlQf
+6RA7KECto/PyE/5+4W5pO8KUA/W3c7+80WBTTl5g0/S/oCvqM/X6bh/35Cv
h029k0n+W6hA9dBOPH/fFRhe8+PoapTf/UD9/TeN2/cT/29RcnoM6a8iBeyG
pHL+9Qv5bVLsTB/SJ79x/CcUq87/V+B1/xF1/yP7/6NAdoOuPH4lClyofcN1
Gq3P/sX+Pcrj+ss/5G+rPsUi+VepAv3dKrN9GOmg3fDTTWYb5keDuK5TBtfH
y+nAyWuUe3Kh4TriiA+RPH7ldfBmseWHVYb1Cw3i4p7LuX8VdDB4f0JqoWF9
T4O4S9MTzA8VdTBiwJrBdQz6QoO4+zpbHr9KOiit5Vx3oME/NYhffKnF/ltZ
B2mOPbrEGd5v0CA+55rO+0ur6EDXsmA17e/VIB5tm8T/r6qDEucCpzzD/nUN
4q6H7zA/V9OBPrH6uI6G+qkGsX/T46zfq+ugYqkuSkvjh/hyUl+O7zV0cDHo
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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10001.}, {0, 6.540179621372954*^8}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with Phi shock\"", FontSize -> 12, StripOnInput -> False],
        TraditionalForm], 
     PlotRange -> {{0, 10001.}, {0, 6.540179621372954*^8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Cathay\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.691525097803615*^9, 3.6915251190428667`*^9}, 
   3.6915252302722607`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJxd0mtIU3EcxvF/0kVqgZVgVtisKWJhVjpNzT1eqs3N6W5na6EjnTnKG5ql
kbpV0otEM4syohAjzNcRmBFT06xAJEsCszTsdUKEkaFN3E/wN9gOnz3nO3bO
Fl5QbiwKEEI4fc+l4/JjVrX02jndkeZ/A6sdyBzEHMy8nXkXs5x5D7OCOZI5
ijmaeT9zDHMs80HmQ8yHmeOY45mVzAnMicxHmJOYk5lTmI8ypzKrmLHabmaR
xnZmkc52ZpHBdmaRyXZmcYztzOI425nFCbYzCzXbmYWG7RqERezs6XHM9y3v
Weiof/LWmTGzbHcWmhSXN/RKfgstyiaC2qLttGvxI0V52+CiXYeQzumXW5S0
69D/Pvubo5H2bOTfrPxo0tKeja3j+sZ2Ge16GCKvd2kLaddj4HGOpySJ9hyU
yrstj87Q7nNU78WhfNpz8X1Q+jJwxW/kInF9zOb2Vjo/Fz8b9HF9ar+9vvPv
Dq/9F0a9ASFjmYEauj4Y0PwsXL8mgnoDSvKchikT9b7z7fciFjzUGyErUT1o
r6XeCO9I+TZXAvVGTDa4C2oU1BuROjY/U03XK0xw3BgPDq2h3gS7ZbFxB12P
24RKT0jx53jqTWh6nql6s5d6M9znF1rkOurNmF03cMfupN6MuU26s1Wl1Jsx
HdNsV6uot0AZeiD5ax31FlQU/64u2ki9BYXxbb1V9Ht4LRgdlibqH1IvYcRl
jatb+f4Sbr3unvqVTr2EFoeiKyCPegn7YtNlifXUW5FwzTW5WE29FS+Mu1v/
rvwfrPAMFdj+XKDeitNh9y+do/spbPhU+6qup4J6G2QV3qdlNupt+HBqsVxd
Sb0Nc6ODV+X0eeIk+t/pJjS++/0f6bqhig==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1:eJxd0mtIUwEYxvHjLFhZ4gcJa1IZtsIsct7ykj7r4m1edr9ogZeKzHAVBaY0
hllLsQ+KKQObibjQnCgZRmlMCkuDLgYJfkjU+mSTRCoowxT3Cr6D7fDbc/5w
ds5CCs3qsyJBEM4tv1eOq68fySufVeM2ufcLrLeYOYA5kDmIOZh5N/Me5lBm
KfN+5jDmcOZDzIeZI5hlzJHMUczRzDHMscxHmOOY45kTmBOZjzInMSczY72t
zIKc7czCMbYzC8fZziycYDuzcJLtzEIK25mFVLYzC2lsZxbS2Z4O8ebEKF+p
Z2h1z4C//Y/LU/xp1dYMjE080m1t9FpQYHKwoVqURrsCFc/UOz1NtGfCz7Uv
tLaM9kx09bq+zl+nPQumh7/0B9toz8KHttjRug7as/Gm1R0YUkN7NixDcrPe
QnsOTLO+LUn3ac/BzGhQWchF2pVoPNC+/WqG11Biy0zAGclNOl+J8vDKt5ob
XruVmCv48tzipF6FyYY8T1Ep9Sq8n58utFVRr4JDsdCRSr/XrUK9LV3W8oJ6
NUrkzqWF09Sr4Ww353afp16N7+oC//G1Xg00O2Z/36Veg5/f4rWDzdRrYOmc
cPQaqdcgTGTtsNP1uDX4ODi2N22Aei2072yyx3S/ocWuGJ8+fSX1WviEN7VP
NVCvxeJAa++9aOp1EC8qRnq6qddhuNR341Ad9Tr4pfQ7ei5Qr8OV6vzIkrXn
p4dUornTR+dDj9vN4pq8Iur12DYhmcm1Uq/Hprlgz0gt9QYUSsqlw+XUG3Dr
VeflxrX/owGX5v69juui3oAxkX/KtIt6I/LtT66N0P2AEfv7lRHFduqNqM/J
cNpOUW/E56gdG6b01Jtgbvnb9ZKuByZAtpTwtIJ6E7QPFqqE5ef1H4aHqG0=

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 102.}, {-7.348132753696562*^9, 1.5*^8}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with Phi shock\"", FontSize -> 12, StripOnInput -> False],
        TraditionalForm], 
     PlotRange -> {{0, 102.}, {-7.348132753696562*^9, 1.5*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Rentistan\"", "\"Develpolus\"", "\"Bellicostia\"", "\"Hippieberg\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.691525097803615*^9, 3.6915251190428667`*^9}, 
   3.691525230400353*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw9kg1Qk3Ucx8e4iBdFCNShWDgEJARpQIDA+PK68SKOsbFRlpwEA0xBpSy4
coHlGYlM4A7E8+SlEMJARCjCu/GiCyNJkBQKttM6nXQnwhIQGtn5/Njdtvs8
n+f7e/k/z+a9OeJ0NovFynz+/f//xWc69PlPKt+mNYy5gKCqKg+zLa/0vkBz
jAz7NVYesGDYBhvYAyfU1cT2KN5fstRwnZgD7SbdX6X1xI5QPHh4+OZ9Yie0
20Q+4B0l5qLm8amiM/3EW7CQVdl17TixK86ZjY2Iyom3gi9B6OVx4tdhJZ+O
76gk3oZcC1ZLz5fEXmjY9/iQmYbYG3sLxmYOniR+A5qmttSmG8Q8vO9c/y63
jtgHjW3r2Gm9xL7g9ggW63KJ/eBSk9DtepX4Tbymqro120jsj2+PbRP0dhAH
oNRpgv/NI+JADL23X92/cv8OXLSfNw/tIQ7CEdXZJ0UVxMHINuqk9reIQ7Dx
ZkHL8VliPvLq0uf7W4lDEadNsNZdIgbcbpsc+aSMYSXwY1aBIaCLfBgOZox1
ZIySD0NyXRbv0wHy4VhQG2M6aR9lOLqrDqt9vyIfgfV8Y3ziCfIRGCzuVPBW
zj8SRoc7OeG0rzISptFNk3+3k49C/cxT99Cz5KPw0/nWd5abyUejnmt59GN6
HspoqNKnQ9gt5AVQeC91HKD3RymAquqOXdwQeSEuGG2LxAryQtye0ozc7SMf
gyihldXAH+RjkNYn2ewVbMP4WOifeBSsiljD+Fhck04Wmi9bMz4OtmV+j3hs
8nG44vr92n1WDLPiUTHH1xgdyMfDo04Y+9FG8juxYQff+u5a8juhdjMUpjyj
+gnwyv9gNMKLfAJU/gHtRgHld0FsXaPK/Je5X7kLGacbhn7XU16Erpf90120
DEOEdoc9BgPNrxTh86tTvyy8ytRTi+Dr7MqZCaL6idCoLHSLg5RPhKH+5ES2
iOZJhF2t5apDgZRPhKOJXYnxN+ovRpo83TKD6kGMVNn66TxHyouRPdq8WMul
vBgKjta+muZhJWF0IvjG/CT1T0Lmw7FNuy0on4S83Niw8jnGq5OgFkSan7al
vATaPruifDpfSBB8TjsMG8pLcJ6tuRy4lfpLcKlslt3kTHkpxr/znCu1pLwU
WO3p7qOh85NinXdxiZTqq6VwSdB89kMz7Z8MY05OvuJnmj8Zf0r1tl+s7J+M
cZnf4JSO5k9GrXy4c5lD/WW4X2Kiv9hNeRn67xn+wWrKy6AtL7VtcqP+MuxJ
C2l79iv1l8NULHxb3kd5OS5sj2gf5lNejivOPtUaYrUc1z/UV2RGUv8UhHC/
rtTupv1TMDPiNiH1oHwKCu85O5k+pflT0P2S0HPJnfJvwc9neTvHfE3vf1Bw
36M=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 104.}, {-1.947844887039964*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with Phi shock\"", FontSize -> 12, StripOnInput -> False],
        TraditionalForm], 
     PlotRange -> {{0, 104.}, {-1.947844887039964*^10, 2.695*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kleptopia\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.691525097803615*^9, 3.6915251190428667`*^9}, 
   3.691525230475391*^9}]
}, Open  ]],

Cell[TextData[StyleBox["\[CapitalOmega] shock plotting, ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.67261290821944*^9, 3.672612918550116*^9}, {
  3.672658179590869*^9, 3.672658193610507*^9}, {3.672658252259008*^9, 
  3.6726582525153847`*^9}, {3.672658439890909*^9, 3.672658440490107*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaOSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedoniaOSHOCK.mx\>\"", "]"}], " ", "//",
     " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaOSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerikaOSHOCK.mx\>\"", "]"}], " ", "//", 
    " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopiaOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathayOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistanOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolusOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostiaOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergOSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippiebergOSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672612980421198*^9, 3.6726130142136717`*^9}, 
   3.672613550264583*^9, 3.672613614814622*^9, {3.672658254590952*^9, 
   3.672658283116098*^9}, {3.672658443403738*^9, 3.672658469803804*^9}, {
   3.67265867874115*^9, 3.672658680333159*^9}, {3.68564626920396*^9, 
   3.685646302268426*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaOSHOCK", " ", "=", " ", 
   RowBox[{"FreedoniaOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaOSHOCK", " ", "=", " ", 
   RowBox[{"MerikaOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaOSHOCK", " ", "=", " ", 
   RowBox[{"KleptopiaOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayOSHOCK", "=", " ", 
   RowBox[{"CathayOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanOSHOCK", "=", " ", 
   RowBox[{"RentistanOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusOSHOCK", "=", " ", 
   RowBox[{"DevelpolusOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaOSHOCK", "=", " ", 
   RowBox[{"BellicostiaOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergOSHOCK", "=", " ", 
   RowBox[{"HippiebergOSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6726130541249313`*^9, 3.672613096427991*^9}, {
  3.672658306401094*^9, 3.67265835296786*^9}, {3.672658473177986*^9, 
  3.672658500299941*^9}, {3.68564630474074*^9, 3.6856463314757338`*^9}}],

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FreedoniaOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MerikaOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CathayOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", ",", "Pink"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RentistanOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DevelpolusOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BellicostiaOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HippiebergOSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KleptopiaOSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69152484177125*^9, 3.6915248757446547`*^9}}],

Cell[TextData[StyleBox["E shock plotting, ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.67261290821944*^9, 3.672612918550116*^9}, {
  3.672658179590869*^9, 3.672658193610507*^9}, {3.672658252259008*^9, 
  3.6726582525153847`*^9}, {3.672658439890909*^9, 3.672658440490107*^9}, {
  3.672658549599283*^9, 3.672658549822014*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaEtSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedoniaEtSHOCK.mx\>\"", "]"}], " ", "//",
     " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaEtSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerikaEtSHOCK.mx\>\"", "]"}], " ", "//", 
    " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopiaEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathayEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistanEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolusEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostiaEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergEtSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippiebergEtSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672612980421198*^9, 3.6726130142136717`*^9}, 
   3.672613550264583*^9, 3.672613614814622*^9, {3.672658254590952*^9, 
   3.672658283116098*^9}, {3.672658443403738*^9, 3.672658469803804*^9}, {
   3.6726585601889963`*^9, 3.672658603206354*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaEtSHOCK", " ", "=", " ", 
   RowBox[{"FreedoniaEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaEtSHOCK", " ", "=", " ", 
   RowBox[{"MerikaEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaEtSHOCK", " ", "=", " ", 
   RowBox[{"KleptopiaEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayEtSHOCK", "=", " ", 
   RowBox[{"CathayEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanEtSHOCK", "=", " ", 
   RowBox[{"RentistanEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusEtSHOCK", "=", " ", 
   RowBox[{"DevelpolusEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaEtSHOCK", "=", " ", 
   RowBox[{"BellicostiaEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergEtSHOCK", "=", " ", 
   RowBox[{"HippiebergEtSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6726130541249313`*^9, 3.672613096427991*^9}, {
  3.672658306401094*^9, 3.67265835296786*^9}, {3.672658473177986*^9, 
  3.672658500299941*^9}, {3.672658605623239*^9, 3.6726586326300507`*^9}}],

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FreedoniaEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MerikaEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CathayEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", ",", "Pink"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RentistanEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DevelpolusEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BellicostiaEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HippiebergEtSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KleptopiaEtSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.691524893057384*^9, 3.691524933683683*^9}}],

Cell[TextData[StyleBox["Policing (Es) shock plotting, ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.67261290821944*^9, 3.672612918550116*^9}, {
  3.672658179590869*^9, 3.672658193610507*^9}, {3.672658252259008*^9, 
  3.6726582525153847`*^9}, {3.672658439890909*^9, 3.672658440490107*^9}, {
  3.672658549599283*^9, 3.672658549822014*^9}, {3.672658756764697*^9, 
  3.672658764475109*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaEsSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedoniaEsSHOCK.mx\>\"", "]"}], " ", "//",
     " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaEsSHOCK", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerikaEsSHOCK.mx\>\"", "]"}], " ", "//", 
    " ", "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopiaEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathayEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistanEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolusEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostiaEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergEsSHOCK", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippiebergEsSHOCK.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672612980421198*^9, 3.6726130142136717`*^9}, 
   3.672613550264583*^9, 3.672613614814622*^9, {3.672658254590952*^9, 
   3.672658283116098*^9}, {3.672658443403738*^9, 3.672658469803804*^9}, {
   3.6726585601889963`*^9, 3.672658603206354*^9}, {3.672658793337617*^9, 
   3.672658820779039*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FreedoniaEsSHOCK", " ", "=", " ", 
   RowBox[{"FreedoniaEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MerikaEsSHOCK", " ", "=", " ", 
   RowBox[{"MerikaEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KleptopiaEsSHOCK", " ", "=", " ", 
   RowBox[{"KleptopiaEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CathayEsSHOCK", "=", " ", 
   RowBox[{"CathayEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RentistanEsSHOCK", "=", " ", 
   RowBox[{"RentistanEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DevelpolusEsSHOCK", "=", " ", 
   RowBox[{"DevelpolusEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellicostiaEsSHOCK", "=", " ", 
   RowBox[{"BellicostiaEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HippiebergEsSHOCK", "=", " ", 
   RowBox[{"HippiebergEsSHOCK", "/.", 
    RowBox[{
     RowBox[{"ScientificForm", "[", 
      RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6726130541249313`*^9, 3.672613096427991*^9}, {
  3.672658306401094*^9, 3.67265835296786*^9}, {3.672658473177986*^9, 
  3.672658500299941*^9}, {3.672658605623239*^9, 3.6726586326300507`*^9}, {
  3.672658823236436*^9, 3.672658849778513*^9}}],

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FreedoniaEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MerikaEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CathayEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Cathay\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Blue", ",", "Pink"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RentistanEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DevelpolusEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BellicostiaEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HippiebergEsSHOCK", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Rentistan\>\"", ",", "\"\<Develpolus\>\"", ",", 
      "\"\<Bellicostia\>\"", ",", "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Purple", ",", "Brown", ",", " ", "Magenta"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KleptopiaEsSHOCK", "[", 
      RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Kleptopia\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with Phi shock\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.691524951790196*^9, 3.691524985978449*^9}}]
},
WindowSize->{1106, 778},
WindowMargins->{{28, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 563, 10, 54, "Input"],
Cell[1146, 34, 187, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370, 41, 113, 1, 32, "Input"],
Cell[1486, 44, 161, 2, 32, "Output"]
}, Open  ]],
Cell[1662, 49, 157, 3, 30, "Text"],
Cell[1822, 54, 1730, 45, 180, "Input"],
Cell[3555, 101, 138, 1, 30, "Text"],
Cell[3696, 104, 2078, 60, 180, "Input"],
Cell[5777, 166, 251, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[6053, 175, 2683, 72, 222, "Input"],
Cell[8739, 249, 21955, 447, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30731, 701, 2434, 66, 222, "Input"],
Cell[33168, 769, 18312, 371, 236, "Output"]
}, Open  ]],
Cell[51495, 1143, 162, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[51682, 1149, 1099, 28, 75, "Input"],
Cell[52784, 1179, 9129, 186, 216, "Output"]
}, Open  ]],
Cell[61928, 1368, 155, 2, 30, "Text"],
Cell[62086, 1372, 1599, 42, 180, "Input"],
Cell[CellGroupData[{
Cell[63710, 1418, 1819, 48, 180, "Input"],
Cell[65532, 1468, 298, 7, 24, "Message"],
Cell[65833, 1477, 288, 7, 24, "Message"],
Cell[66124, 1486, 127, 2, 32, "Output"],
Cell[66254, 1490, 298, 7, 24, "Message"],
Cell[66555, 1499, 290, 7, 24, "Message"],
Cell[66848, 1508, 125, 2, 32, "Output"],
Cell[66976, 1512, 300, 7, 24, "Message"],
Cell[67279, 1521, 290, 7, 24, "Message"],
Cell[67572, 1530, 124, 2, 32, "Output"],
Cell[67699, 1534, 297, 7, 24, "Message"],
Cell[67999, 1543, 288, 7, 24, "Message"],
Cell[68290, 1552, 125, 2, 32, "Output"],
Cell[68418, 1556, 297, 7, 24, "Message"],
Cell[68718, 1565, 286, 6, 24, "Message"],
Cell[69007, 1573, 125, 2, 32, "Output"],
Cell[69135, 1577, 299, 7, 24, "Message"],
Cell[69437, 1586, 286, 6, 24, "Message"],
Cell[69726, 1594, 125, 2, 32, "Output"],
Cell[69854, 1598, 298, 7, 24, "Message"],
Cell[70155, 1607, 286, 6, 24, "Message"],
Cell[70444, 1615, 125, 2, 32, "Output"],
Cell[70572, 1619, 299, 7, 24, "Message"],
Cell[70874, 1628, 286, 6, 24, "Message"],
Cell[71163, 1636, 125, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71325, 1643, 5933, 151, 495, "Input"],
Cell[77261, 1796, 18693, 377, 251, "Output"],
Cell[95957, 2175, 21621, 441, 251, "Output"],
Cell[117581, 2618, 9336, 189, 231, "Output"]
}, Open  ]],
Cell[126932, 2810, 245, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[127202, 2818, 1873, 45, 180, "Input"],
Cell[129078, 2865, 243, 6, 24, "Message"],
Cell[129324, 2873, 222, 5, 24, "Message"],
Cell[129549, 2880, 245, 6, 24, "Message"],
Cell[129797, 2888, 224, 5, 24, "Message"]
}, Open  ]],
Cell[130036, 2896, 2163, 59, 180, "Input"],
Cell[CellGroupData[{
Cell[132224, 2959, 5284, 130, 474, "Input"],
Cell[137511, 3091, 13539, 275, 251, "Output"],
Cell[151053, 3368, 124185, 2074, 285, "Output"],
Cell[275241, 5444, 20012, 408, 236, "Output"],
Cell[295256, 5854, 9239, 188, 230, "Output"]
}, Open  ]],
Cell[304510, 6045, 300, 4, 30, "Text"],
Cell[304813, 6051, 1793, 45, 180, "Input"],
Cell[306609, 6098, 2128, 59, 180, "Input"],
Cell[308740, 6159, 3839, 100, 432, "Input"],
Cell[312582, 6261, 335, 5, 30, "Text"],
Cell[312920, 6268, 1763, 44, 180, "Input"],
Cell[314686, 6314, 2145, 59, 180, "Input"],
Cell[316834, 6375, 3846, 100, 432, "Input"],
Cell[320683, 6477, 396, 6, 30, "Text"],
Cell[321082, 6485, 1813, 45, 180, "Input"],
Cell[322898, 6532, 2194, 60, 180, "Input"],
Cell[325095, 6594, 3846, 100, 432, "Input"]
}
]
*)

