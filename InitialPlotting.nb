(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    136925,       3032]
NotebookOptionsPosition[    135753,       2991]
NotebookOutlinePosition[    136110,       3007]
CellTagsIndexPosition[    136067,       3004]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6694738812008753`*^9, 3.66947390283029*^9}, {
  3.670020010234455*^9, 3.670020017652039*^9}, {3.6700203239755383`*^9, 
  3.6700203350170107`*^9}, {3.672305267915553*^9, 3.672305275056994*^9}, {
  3.672305471271903*^9, 3.6723054929129*^9}, {3.672305535075715*^9, 
  3.672305570086248*^9}, {3.6723056425281277`*^9, 3.672305649963022*^9}}],

Cell[BoxData["\<\"/Users/tazz/Documents/Git/StabilityProject2014\"\>"], \
"Output",
 CellChangeTimes->{3.672512104447665*^9, 3.6725990287449293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\</Users/ethanspangler/StabilityProject\>\""], "Input",
 CellChangeTimes->{3.672512100211198*^9}],

Cell[BoxData["\<\"/Users/ethanspangler/StabilityProject\"\>"], "Output",
 CellChangeTimes->{3.672512100344366*^9}]
}, Open  ]],

Cell["\<\
Plots of Freedonia, Merika, and Kleptopia for low initial dissent. \
\>", "Text",
 CellChangeTimes->{{3.669474834358407*^9, 3.669474865621138*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Freedonia", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataFreedonia.mx\>\"", "]"}], " ", "//", " ", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Merika", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataMerika.mx\>\"", "]"}], " ", "//", " ", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kleptopia", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataKleptopia.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cathay", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataCathay.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rentistan", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataRentistan.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Develpolus", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataDevelpolus.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bellicostia", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataBellicostia.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hippieberg", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataHippieberg.mx\>\"", "]"}], "//", 
    "Dataset"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.669473877303152*^9, 3.669473879662216*^9}, {
   3.6694743359012747`*^9, 3.6694743425708933`*^9}, {3.66947470480116*^9, 
   3.6694747521406317`*^9}, {3.669475244075739*^9, 3.6694752466656923`*^9}, 
   3.670020006637568*^9, {3.672304257017521*^9, 3.672304262013875*^9}, {
   3.6724978539308367`*^9, 3.672497944641344*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.672304268276464*^9, 3.672304270171908*^9}}],

Cell["New lines to convert Scientific form to plotable form:", "Text",
 CellChangeTimes->{{3.672304276459331*^9, 3.6723042933312883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Freedonia", " ", "=", " ", 
  RowBox[{"Freedonia", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Merika", " ", "=", " ", 
  RowBox[{"Merika", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Kleptopia", " ", "=", " ", 
  RowBox[{"Kleptopia", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Cathay", "=", " ", 
  RowBox[{"Cathay", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Rentistan", "=", " ", 
  RowBox[{"Rentistan", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Develpolus", "=", " ", 
  RowBox[{"Develpolus", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Bellicostia", "=", " ", 
  RowBox[{"Bellicostia", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", 
    "n"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Hippieberg", "=", " ", 
  RowBox[{"Hippieberg", "/.", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{"n_", ",", "rest___"}], "]"}], "\[Rule]", "n"}]}]}]}], "Input",
 CellChangeTimes->{{3.672304298834947*^9, 3.6723043437724*^9}, {
  3.672497965034464*^9, 3.67249805519978*^9}, {3.672498623756978*^9, 
  3.672498635234902*^9}, {3.672507406079191*^9, 3.672507417340949*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       TagBox[
        InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.03959\"", 0.03958551390946177, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"6.3\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 6.3*^7, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"2.87\"", "\[Times]", 
           SuperscriptBox["10", "\"8\""]}], 2.87*^8, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.605\"", "\[Times]", 
           SuperscriptBox["10", "\"1355718576299609\""]}], 
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609, AutoDelete -> True], NumberForm[#, 4]& ]}, {
       TagBox[
        InterpretationBox["\"1.\"", 1., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.03557\"", 0.03557417429263256, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"3.611\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 3.610839438946493*^7, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"3.139\"", "\[Times]", 
           SuperscriptBox["10", "\"8\""]}], 3.138916056105351*^8, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.004011\"", 0.004011339616829215, AutoDelete -> True], 
        NumberForm[#, 4]& ]}, {
       ItemBox[
        RowBox[{
          TagBox[
           TooltipBox["2 levels", 
            InterpretationBox[
             TagBox[
              TagBox[
               StyleBox[
                TagBox[
                 TooltipBox[
                  SubscriptBox[
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "5", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Real], 5]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                   StyleBox[
                   "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                  Cell[
                   BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real]\
, 5], 2]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                  TooltipDelay -> 0.25], 
                 EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2], InputForm], "Input"]], 
                   Method -> "Preemptive", PassEventsDown -> True, 
                   PassEventsUp -> False}]], FontTracking -> "Condensed", 
                FontWeight -> "Bold", SpanMinSize -> 1.3, SpanMaxSize -> 3.], 
               Deploy, DefaultBaseStyle -> "Deploy"], 
              MouseAppearanceTag["LinkHand"]], 
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 5], 2]], TooltipDelay -> 1.5], 
           EventHandlerTag[{"MouseClicked" :> Print[
               InputForm[
                TypeSystem`Vector[
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 5], 2]]]}]], 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"2", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.6725990372831173`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       TagBox[
        InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.04573\"", 0.04573167709565021, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"9.1\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 9.1*^7, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"2.59\"", "\[Times]", 
           SuperscriptBox["10", "\"8\""]}], 2.59*^8, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.605\"", "\[Times]", 
           SuperscriptBox["10", "\"1355718576299609\""]}], 
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609, AutoDelete -> True], NumberForm[#, 4]& ]}, {
       TagBox[
        InterpretationBox["\"1.\"", 1., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.04188\"", 0.041878003327516414`, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"7.096\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 7.096036521900867*^7, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"2.79\"", "\[Times]", 
           SuperscriptBox["10", "\"8\""]}], 2.790396347809914*^8, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.003854\"", 0.0038536737681337946`, AutoDelete -> True], 
        NumberForm[#, 4]& ]}, {
       ItemBox[
        RowBox[{
          TagBox[
           TooltipBox["2 levels", 
            InterpretationBox[
             TagBox[
              TagBox[
               StyleBox[
                TagBox[
                 TooltipBox[
                  SubscriptBox[
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "5", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Real], 5]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                   StyleBox[
                   "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                  Cell[
                   BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real]\
, 5], 2]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                  TooltipDelay -> 0.25], 
                 EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2], InputForm], "Input"]], 
                   Method -> "Preemptive", PassEventsDown -> True, 
                   PassEventsUp -> False}]], FontTracking -> "Condensed", 
                FontWeight -> "Bold", SpanMinSize -> 1.3, SpanMaxSize -> 3.], 
               Deploy, DefaultBaseStyle -> "Deploy"], 
              MouseAppearanceTag["LinkHand"]], 
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 5], 2]], TooltipDelay -> 1.5], 
           EventHandlerTag[{"MouseClicked" :> Print[
               InputForm[
                TypeSystem`Vector[
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 5], 2]]]}]], 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"2", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.6725990372977858`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       TagBox[
        InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"1.069\"", 1.0689205775410002`, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"4.1\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 4.1*^7, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"9.\"", "\[Times]", 
           SuperscriptBox["10", "\"6\""]}], 9.*^6, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.605\"", "\[Times]", 
           SuperscriptBox["10", "\"1355718576299609\""]}], 
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609, AutoDelete -> True], NumberForm[#, 4]& ]}, {
       TagBox[
        InterpretationBox["\"1.\"", 1., AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"1.072\"", 1.0717726897813682`, AutoDelete -> True], 
        NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"4.072\"", "\[Times]", 
           SuperscriptBox["10", "\"7\""]}], 4.0724317689836*^7, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
         RowBox[{"\"9.276\"", "\[Times]", 
           SuperscriptBox["10", "\"6\""]}], 9.275682310164003*^6, AutoDelete -> 
         True], NumberForm[#, 4]& ], 
       TagBox[
        InterpretationBox[
        "\"0.002852\"", 0.0028521122403679655`, AutoDelete -> True], 
        NumberForm[#, 4]& ]}, {
       ItemBox[
        RowBox[{
          TagBox[
           TooltipBox["2 levels", 
            InterpretationBox[
             TagBox[
              TagBox[
               StyleBox[
                TagBox[
                 TooltipBox[
                  SubscriptBox[
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "5", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Real], 5]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                   StyleBox[
                   "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                  Cell[
                   BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real]\
, 5], 2]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                  TooltipDelay -> 0.25], 
                 EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 5], 2], InputForm], "Input"]], 
                   Method -> "Preemptive", PassEventsDown -> True, 
                   PassEventsUp -> False}]], FontTracking -> "Condensed", 
                FontWeight -> "Bold", SpanMinSize -> 1.3, SpanMaxSize -> 3.], 
               Deploy, DefaultBaseStyle -> "Deploy"], 
              MouseAppearanceTag["LinkHand"]], 
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 5], 2]], TooltipDelay -> 1.5], 
           EventHandlerTag[{"MouseClicked" :> Print[
               InputForm[
                TypeSystem`Vector[
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 5], 2]]]}]], 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"2", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.672599037308309*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{StyleBox[
     GridBox[{{0, 
        InterpretationBox[
         TagBox[
          RowBox[{"10000", " ", 
            RowBox[{"Mean", "[", 
              RowBox[{"{", "}"}], "]"}]}], Short[#, 5]& ], 10000 Mean[{}]], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"9.15\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 9.15*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.85\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 5.85*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        InterpretationBox[
         TagBox[
          RowBox[{"Abs", "[", 
            
            RowBox[{"1.60521676193366172702774105306375828321`15.\
954589770191005*^1355718576299609", "-", 
              RowBox[{"10000", " ", 
                RowBox[{"Mean", "[", 
                  RowBox[{"{", "}"}], "]"}]}]}], "]"}], Short[#, 5]& ], 
         Abs[
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609 - 10000 Mean[{}]]]}, {
        ItemBox[
         RowBox[{
           TagBox[
            TooltipBox["2 levels", 
             InterpretationBox[
              TagBox[
               TagBox[
                StyleBox[
                 TagBox[
                  TooltipBox[
                   SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox["TypeSystem`Atom[Real]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Tuple[{TypeSystem`Atom[Integer], \
TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], InputForm], 
                    "Input"]], Method -> "Preemptive", PassEventsDown -> True,
                     PassEventsUp -> False}]]}], "}"}], 
                    StyleBox[
                    "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                   Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Tuple[{TypeSystem`Atom[\
Integer], TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}], 1]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                  EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]], 
                 FontTracking -> "Condensed", FontWeight -> "Bold", 
                 SpanMinSize -> 1.3, SpanMaxSize -> 3.], Deploy, 
                DefaultBaseStyle -> "Deploy"], 
               MouseAppearanceTag["LinkHand"]], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
             TooltipDelay -> 1.5], 
            EventHandlerTag[{"MouseClicked" :> Print[
                InputForm[
                 TypeSystem`Vector[
                  TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]]]}]], 
           AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
           RowBox[{"1", "rows"}]}], 
         BaseStyle -> {
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False}, 
         ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
         Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
      GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
      FrameStyle -> RGBColor[0, 0, 0, 0.4], 
      GridBoxDividers -> {"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
      GridFrameMargins -> {{2, 3}, {1, 3}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, RowMinHeight -> 
      1.3], SpanMinSize -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.672599037367962*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{StyleBox[
     GridBox[{{0, 
        InterpretationBox[
         TagBox[
          RowBox[{"10000", " ", 
            RowBox[{"Mean", "[", 
              RowBox[{"{", "}"}], "]"}]}], Short[#, 5]& ], 10000 Mean[{}]], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.5\"", "\[Times]", 
            SuperscriptBox["10", "\"8\""]}], 1.5*^8, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.5\"", "\[Times]", 
            SuperscriptBox["10", "\"8\""]}], 1.5*^8, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        InterpretationBox[
         TagBox[
          RowBox[{"Abs", "[", 
            
            RowBox[{"1.60521676193366172702774105306375828321`15.\
954589770191005*^1355718576299609", "-", 
              RowBox[{"10000", " ", 
                RowBox[{"Mean", "[", 
                  RowBox[{"{", "}"}], "]"}]}]}], "]"}], Short[#, 5]& ], 
         Abs[
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609 - 10000 Mean[{}]]]}, {
        ItemBox[
         RowBox[{
           TagBox[
            TooltipBox["2 levels", 
             InterpretationBox[
              TagBox[
               TagBox[
                StyleBox[
                 TagBox[
                  TooltipBox[
                   SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox["TypeSystem`Atom[Real]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Tuple[{TypeSystem`Atom[Integer], \
TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], InputForm], 
                    "Input"]], Method -> "Preemptive", PassEventsDown -> True,
                     PassEventsUp -> False}]]}], "}"}], 
                    StyleBox[
                    "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                   Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Tuple[{TypeSystem`Atom[\
Integer], TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}], 1]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                  EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]], 
                 FontTracking -> "Condensed", FontWeight -> "Bold", 
                 SpanMinSize -> 1.3, SpanMaxSize -> 3.], Deploy, 
                DefaultBaseStyle -> "Deploy"], 
               MouseAppearanceTag["LinkHand"]], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
             TooltipDelay -> 1.5], 
            EventHandlerTag[{"MouseClicked" :> Print[
                InputForm[
                 TypeSystem`Vector[
                  TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]]]}]], 
           AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
           RowBox[{"1", "rows"}]}], 
         BaseStyle -> {
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False}, 
         ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
         Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
      GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
      FrameStyle -> RGBColor[0, 0, 0, 0.4], 
      GridBoxDividers -> {"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
      GridFrameMargins -> {{2, 3}, {1, 3}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, RowMinHeight -> 
      1.3], SpanMinSize -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.672599037379861*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{StyleBox[
     GridBox[{{0, 
        InterpretationBox[
         TagBox[
          RowBox[{"10000", " ", 
            RowBox[{"Mean", "[", 
              RowBox[{"{", "}"}], "]"}]}], Short[#, 5]& ], 10000 Mean[{}]], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 5.*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 5.*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        InterpretationBox[
         TagBox[
          RowBox[{"Abs", "[", 
            
            RowBox[{"1.60521676193366172702774105306375828321`15.\
954589770191005*^1355718576299609", "-", 
              RowBox[{"10000", " ", 
                RowBox[{"Mean", "[", 
                  RowBox[{"{", "}"}], "]"}]}]}], "]"}], Short[#, 5]& ], 
         Abs[
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609 - 10000 Mean[{}]]]}, {
        ItemBox[
         RowBox[{
           TagBox[
            TooltipBox["2 levels", 
             InterpretationBox[
              TagBox[
               TagBox[
                StyleBox[
                 TagBox[
                  TooltipBox[
                   SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox["TypeSystem`Atom[Real]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Tuple[{TypeSystem`Atom[Integer], \
TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], InputForm], 
                    "Input"]], Method -> "Preemptive", PassEventsDown -> True,
                     PassEventsUp -> False}]]}], "}"}], 
                    StyleBox[
                    "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                   Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Tuple[{TypeSystem`Atom[\
Integer], TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}], 1]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                  EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]], 
                 FontTracking -> "Condensed", FontWeight -> "Bold", 
                 SpanMinSize -> 1.3, SpanMaxSize -> 3.], Deploy, 
                DefaultBaseStyle -> "Deploy"], 
               MouseAppearanceTag["LinkHand"]], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
             TooltipDelay -> 1.5], 
            EventHandlerTag[{"MouseClicked" :> Print[
                InputForm[
                 TypeSystem`Vector[
                  TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]]]}]], 
           AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
           RowBox[{"1", "rows"}]}], 
         BaseStyle -> {
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False}, 
         ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
         Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
      GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
      FrameStyle -> RGBColor[0, 0, 0, 0.4], 
      GridBoxDividers -> {"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
      GridFrameMargins -> {{2, 3}, {1, 3}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, RowMinHeight -> 
      1.3], SpanMinSize -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.672599037391045*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{StyleBox[
     GridBox[{{0, 
        InterpretationBox[
         TagBox[
          RowBox[{"10000", " ", 
            RowBox[{"Mean", "[", 
              RowBox[{"{", "}"}], "]"}]}], Short[#, 5]& ], 10000 Mean[{}]], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.6\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 4.6*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 4.*^6, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        InterpretationBox[
         TagBox[
          RowBox[{"Abs", "[", 
            
            RowBox[{"1.60521676193366172702774105306375828321`15.\
954589770191005*^1355718576299609", "-", 
              RowBox[{"10000", " ", 
                RowBox[{"Mean", "[", 
                  RowBox[{"{", "}"}], "]"}]}]}], "]"}], Short[#, 5]& ], 
         Abs[
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609 - 10000 Mean[{}]]]}, {
        ItemBox[
         RowBox[{
           TagBox[
            TooltipBox["2 levels", 
             InterpretationBox[
              TagBox[
               TagBox[
                StyleBox[
                 TagBox[
                  TooltipBox[
                   SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox["TypeSystem`Atom[Real]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Tuple[{TypeSystem`Atom[Integer], \
TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], InputForm], 
                    "Input"]], Method -> "Preemptive", PassEventsDown -> True,
                     PassEventsUp -> False}]]}], "}"}], 
                    StyleBox[
                    "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                   Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Tuple[{TypeSystem`Atom[\
Integer], TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}], 1]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                  EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]], 
                 FontTracking -> "Condensed", FontWeight -> "Bold", 
                 SpanMinSize -> 1.3, SpanMaxSize -> 3.], Deploy, 
                DefaultBaseStyle -> "Deploy"], 
               MouseAppearanceTag["LinkHand"]], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
             TooltipDelay -> 1.5], 
            EventHandlerTag[{"MouseClicked" :> Print[
                InputForm[
                 TypeSystem`Vector[
                  TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]]]}]], 
           AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
           RowBox[{"1", "rows"}]}], 
         BaseStyle -> {
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False}, 
         ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
         Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
      GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
      FrameStyle -> RGBColor[0, 0, 0, 0.4], 
      GridBoxDividers -> {"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
      GridFrameMargins -> {{2, 3}, {1, 3}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, RowMinHeight -> 
      1.3], SpanMinSize -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.6725990374023046`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{StyleBox[
     GridBox[{{0, 
        InterpretationBox[
         TagBox[
          RowBox[{"10000", " ", 
            RowBox[{"Mean", "[", 
              RowBox[{"{", "}"}], "]"}]}], Short[#, 5]& ], 10000 Mean[{}]], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 4.*^6, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.6\"", "\[Times]", 
            SuperscriptBox["10", "\"7\""]}], 4.6*^7, AutoDelete -> True], 
         NumberForm[#, 4]& ], 
        InterpretationBox[
         TagBox[
          RowBox[{"Abs", "[", 
            
            RowBox[{"1.60521676193366172702774105306375828321`15.\
954589770191005*^1355718576299609", "-", 
              RowBox[{"10000", " ", 
                RowBox[{"Mean", "[", 
                  RowBox[{"{", "}"}], "]"}]}]}], "]"}], Short[#, 5]& ], 
         Abs[
         1.60521676193366172702774105306375828321`15.954589770191005*^\
1355718576299609 - 10000 Mean[{}]]]}, {
        ItemBox[
         RowBox[{
           TagBox[
            TooltipBox["2 levels", 
             InterpretationBox[
              TagBox[
               TagBox[
                StyleBox[
                 TagBox[
                  TooltipBox[
                   SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox["TypeSystem`Atom[Real]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Tuple[{TypeSystem`Atom[Integer], \
TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], InputForm], 
                    "Input"]], Method -> "Preemptive", PassEventsDown -> True,
                     PassEventsUp -> False}]]}], "}"}], 
                    StyleBox[
                    "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                   Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Tuple[{TypeSystem`Atom[\
Integer], TypeSystem`AnyType, TypeSystem`Atom[Real], TypeSystem`Atom[Real], \
TypeSystem`AnyType}], 1]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                  EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]], 
                 FontTracking -> "Condensed", FontWeight -> "Bold", 
                 SpanMinSize -> 1.3, SpanMaxSize -> 3.], Deploy, 
                DefaultBaseStyle -> "Deploy"], 
               MouseAppearanceTag["LinkHand"]], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]], 
             TooltipDelay -> 1.5], 
            EventHandlerTag[{"MouseClicked" :> Print[
                InputForm[
                 TypeSystem`Vector[
                  TypeSystem`Tuple[{
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 1]]]}]], 
           AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
           RowBox[{"1", "rows"}]}], 
         BaseStyle -> {
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False}, 
         ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
         Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
      GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
      FrameStyle -> RGBColor[0, 0, 0, 0.4], 
      GridBoxDividers -> {"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> 1.2, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
      GridFrameMargins -> {{2, 3}, {1, 3}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, RowMinHeight -> 
      1.3], SpanMinSize -> 1.3],"Dataset[{__List}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.672512116458292*^9, 3.6725122373234158`*^9, 
  3.672599037413527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Freedonia", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     RowBox[{
      RowBox[{"Merika", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     RowBox[{
      RowBox[{"Kleptopia", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cathay", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Rentistan", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Develpolus", "[", 
       RowBox[{"All", ",", "3"}], "]"}], " ", "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Bellicostia", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Hippieberg", "[", 
       RowBox[{"All", ",", "3"}], "]"}], "//", "Normal"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Freedonia\>\"", ",", "\"\<Merika\>\"", ",", "\"\<Kleptopia\>\"", 
      ",", "\"\<Cathay\>\"", ",", "\"\<Rentistan\>\"", ",", 
      "\"\<Develpolus\>\"", ",", "\"\<Bellicostia\>\"", ",", 
      "\"\<Hippieberg\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
     "Green", ",", "Blue", ",", "Red", ",", "Pink", ",", "Orange", ",", 
      "Purple", ",", "Magenta", ",", "Brown"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Stability with low initial dissent\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Stability\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.672304864740471*^9, 3.672304898771377*^9}, {
  3.672305070551483*^9, 3.6723051382757607`*^9}, {3.672305169405748*^9, 
  3.672305169615231*^9}, {3.672497164759831*^9, 3.672497175777816*^9}, {
  3.67249831718601*^9, 3.6724985312146473`*^9}, {3.672498592126194*^9, 
  3.672498599716134*^9}, {3.672499691144396*^9, 3.672499747389016*^9}, {
  3.6725074472299547`*^9, 3.6725074589403963`*^9}, {3.672507506908532*^9, 
  3.6725075716865253`*^9}, {3.67250760511933*^9, 3.672507619133992*^9}, {
  3.6725120751344423`*^9, 3.672512095675935*^9}, {3.672512270366356*^9, 
  3.67251238713004*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[{{1., 6.3*^7}, {2., 3.610839438946493*^7}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{1., 9.1*^7}, {2., 7.096036521900867*^7}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{1., 4.1*^7}, {2., 4.0724317689836*^7}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5]], 
        LineBox[{{1., 9.15*^7}, {1., 9.15*^7}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[{{1., 1.5*^8}, {1., 1.5*^8}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[{{1., 5.*^7}, {1., 5.*^7}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        LineBox[{{1., 4.6*^7}, {1., 4.6*^7}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[{{1., 4.*^6}, {1., 4.*^6}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.984375, 0}, 
     PlotRange -> {{1., 2.}, {0, 1.5*^8}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Stability\"", TraditionalForm]}, 
     AxesOrigin -> {0.984375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Stability with low initial dissent\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], PlotRange -> {{1., 2.}, {0, 1.5*^8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Freedonia\"", "\"Merika\"", "\"Kleptopia\"", "\"Cathay\"", 
       "\"Rentistan\"", "\"Develpolus\"", "\"Bellicostia\"", 
       "\"Hippieberg\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6724997298319263`*^9, 3.672499749120961*^9}, 
   3.672507432928594*^9, 3.672507575739408*^9, {3.672507611946907*^9, 
   3.672507621380797*^9}, 3.672512158538516*^9, {3.672512308084381*^9, 
   3.672512388040049*^9}, 3.672599041108983*^9}]
}, Open  ]],

Cell[BoxData["3"], "Input",
 CellChangeTimes->{3.672512307917863*^9}]
},
WindowSize->{1479, 1197},
WindowMargins->{{159, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 563, 10, 46, "Input"],
Cell[1146, 34, 149, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332, 41, 113, 1, 28, "Input"],
Cell[1448, 44, 114, 1, 28, "Output"]
}, Open  ]],
Cell[1577, 48, 157, 3, 30, "Text"],
Cell[1737, 53, 1730, 45, 148, "Input"],
Cell[3470, 100, 92, 1, 28, "Input"],
Cell[3565, 103, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[3728, 108, 1862, 50, 148, "Input"],
Cell[5593, 160, 8210, 187, 92, "Output"],
Cell[13806, 349, 8213, 187, 92, "Output"],
Cell[22022, 538, 8200, 187, 92, "Output"],
Cell[30225, 727, 13971, 300, 68, "Output"],
Cell[44199, 1029, 13967, 300, 68, "Output"],
Cell[58169, 1331, 13963, 300, 68, "Output"],
Cell[72135, 1633, 13967, 300, 68, "Output"],
Cell[86105, 1935, 13965, 300, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100107, 2240, 2708, 65, 165, "Input"],
Cell[102818, 2307, 32847, 678, 278, "Output"]
}, Open  ]],
Cell[135680, 2988, 69, 1, 28, "Input"]
}
]
*)

